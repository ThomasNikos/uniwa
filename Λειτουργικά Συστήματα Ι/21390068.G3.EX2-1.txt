#
# Εργαστήριο ΛΣ 1 / Ασκηση 2 - 1 / 2022-23
# Ονοματεπώνυμο: ΝΙΚΟΛΑΟΣ ΘΩΜΑΣ
# ΑΜ: 21390068
#
#
#Άσκηση 1.
#
#Να γραφτεί script με το όνομα searching το οποίο (α) να δέχεται ως ορίσματα δύο ακεραίους
#αριθμούς και (β) να ζητάει από το χρήστη το όνομα ενός καταλόγου, και με βάση αυτά να
#εμφανίζει στην οθόνη τα ακόλουθα (τα 1-3 με χρήση της εντολής find και τα 4-5 με συνδυασμό
#των εντολών ls και grep):
#1. Τα αρχεία του δέντρου του δοθέντος καταλόγου με εξουσιοδοτήσεις (permissions) τον πρώτο
#αριθμό (όρισμα) θεωρώντας τον ως οκταδικό ισοδύναμο.
#2. Τα αρχεία του δέντρου του δοθέντος καταλόγου που άλλαξαν (modify) περιεχόμενα κατά τις
#‘x’ τελευταίες μέρες, όπου ‘x’ ο δεύτερος αριθμός (όρισμα).
#3. Τους υποκαταλόγους του δέντρου του δοθέντος καταλόγου που προσπελάστηκαν (access)
#κατά τις ‘x’ τελευταίες μέρες, όπου ‘x’ ο δεύτερος αριθμός (όρισμα).
#4. Τα αρχεία του δοθέντος καταλόγου στα οποία έχουν δικαίωμα ανάγνωσης όλοι οι χρήστες.
#5. Τους υποκαταλόγους του δοθέντος καταλόγου στους οποίους έχουν δικαίωμα αλλαγών
#(create/rename/delete files) εκτός από τον ιδιοκτήτη και άλλοι χρήστες του συστήματος.
#Πριν από τον εκτύπωση κάθε λίστας από τις παραπάνω (1 έως 5) να τυπώνεται κατάλληλη
#επικεφαλίδα η οποία να αναφέρει μεταξύ άλλων και τον αριθμό των αρχείων (ή υποκαταλόγων)
#που πρόκειται να τυπωθούν. Το script να εκτελείται επαναληπτικά όσο επιθυμεί ο χρήστης (για
#διαφορετικούς καταλόγους) και στο τέλος (πριν την τελική έξοδο) να εμφανίζει αθροιστικά το
#συνολικό αριθμό των ευρεθέντων (αρχείων / υποκαταλόγων) κάθε περίπτωσης (από τις 1 έως 6)
#για όλους τους καταλόγους στους οποίους έψαξε.
#
#
#Απάντηση:

#!/bin/bash

#Έλεγχος για το αν δώθηκαν 2 ορίσματα.

if [ $# -ne 2 ]; then
    echo "Not enough arguements." >&2
    exit 1
fi

#Έλεγχος για το αν το πρώτο όρισμα που δόθηκε είναι ακέραιος αριθμός.

re='^[0-9]+$'
if ! [[ $1 =~ $re ]]; then
    echo "Not an integer." >&2
    exit 2
fi

#Έλεγχος για το αν το δεύτερο όρισμα που δόθηκε είναι ακέραιος αριθμός.

if ! [[ $2 =~ $re ]]; then
    echo "Not an integer." >&2
    exit 3
fi

name="test"
while [ $name != "exit" ]
do
echo "Give name of a directory: (Type exit if you want to leave)"
read name
    if [ $name == "exit" ]; then
        echo All Files Found:
        echo -e 1. $a"\n"2. $b"\n"3. $c"\n"4. $d"\n"5. $e
        exit 0
    fi
    if [ ! -d $name ]; then
        echo -e "Not a directory\n"
        echo All Files Found:
        echo -e 1. $a"\n"2. $b"\n"3. $c"\n"4. $d"\n"5. $e
        exit 4
    fi
    echo "Files with permissions $1: "
    find $name -perm $1
    a=$(($a+$(find $name -perm $1 | wc -l)))
    echo "Files modifidied in last $2 days: "
    find $name -mtime -$2
    b=$(($b+$(    find $name -mtime -$2 | wc -l)))
    echo "Directories accessed in last $2 days: "
    find $name -type d -atime -$2
    c=$(($c+$(find $name -type d -atime -$2 | wc -l)))
    echo "Files all users have permission to read: "
    ls -l $name | grep "^.r..r..r.."
    d=$(($d+$(ls -l $name | grep "^.r..r..r.." | wc -l)))
    echo "Directories everyone can make changes (create/rename/delete files): "
    ls -l $name | grep "^drwxrwxrwx"
    e=$(($e+$(ls -l $name | grep "^drwxrwxrwx" | wc -l)))
    echo ""
done