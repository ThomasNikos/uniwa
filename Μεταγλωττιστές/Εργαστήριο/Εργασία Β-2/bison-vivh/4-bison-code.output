Terminals unused in grammar

   DELIMITER
   KEYWORD
   COMMENT
   UNKNOWN_TOKEN
   AMPERSAND
   BACKSLASH_NEWLINE


State 4 conflicts: 1 shift/reduce
State 30 conflicts: 1 shift/reduce
State 39 conflicts: 1 shift/reduce
State 48 conflicts: 1 shift/reduce
State 61 conflicts: 1 shift/reduce
State 73 conflicts: 1 reduce/reduce
State 75 conflicts: 1 reduce/reduce
State 109 conflicts: 1 reduce/reduce
State 115 conflicts: 1 shift/reduce
State 121 conflicts: 2 shift/reduce, 1 reduce/reduce
State 122 conflicts: 1 shift/reduce
State 159 conflicts: 1 shift/reduce, 3 reduce/reduce
State 160 conflicts: 1 shift/reduce
State 217 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | program NEWLINE
    3        | program expr NEWLINE
    4        | program error NEWLINE
    5        | program expr

    6 number: INTEGER
    7       | FLOAT
    8       | NEG number

    9 term: IDENTIFIER
   10     | number

   11 multiple_float: FLOAT
   12               | FLOAT COMMA multiple_float

   13 multiple_int: INTEGER
   14             | INTEGER COMMA multiple_int

   15 multiple_newline: NEWLINE
   16                 | NEWLINE multiple_newline

   17 array: LEFT_AR multiple_int RIGHT_AR
   18      | LEFT_AR multiple_float RIGHT_AR
   19      | LEFT_AR string RIGHT_AR
   20      | IDENTIFIER LEFT_AR multiple_int RIGHT_AR
   21      | IDENTIFIER LEFT_AR multiple_float RIGHT_AR
   22      | IDENTIFIER LEFT_AR string RIGHT_AR

   23 array_plus: LEFT_AR multiple_int RIGHT_AR PLUS LEFT_AR multiple_int RIGHT_AR
   24           | LEFT_AR multiple_float RIGHT_AR PLUS LEFT_AR multiple_float RIGHT_AR
   25           | LEFT_AR string RIGHT_AR PLUS LEFT_AR string RIGHT_AR

   26 values: term
   27       | array
   28       | STRING

   29 multiple_values: values
   30                | values COMMA multiple_values

   31 variable_list: IDENTIFIER
   32              | IDENTIFIER COMMA variable_list

   33 assignment: /* empty */
   34           | variable_list ASSIGNOP variable_list
   35           | variable_list ASSIGNOP multiple_values

   36 string: STRING
   37       | string COMMA STRING

   38 ret: RETURN INTEGER
   39    | RETURN IDENTIFIER

   40 print_func: PRINT LEFT_PT string RIGHT_PT
   41           | PRINT LEFT_PT variable_list RIGHT_PT
   42           | PRINT LEFT_PT multiple_expressions_no_semi RIGHT_PT
   43           | PRINT LEFT_PT STRING COMMA IDENTIFIER RIGHT_PT
   44           | PRINT LEFT_PT STRING COMMA expr_no_semi RIGHT_PT
   45           | PRINT LEFT_PT IDENTIFIER RIGHT_PT
   46           | PRINT LEFT_PT IDENTIFIER array RIGHT_PT

   47 declaration: TYPE variable_list
   48            | TYPE array
   49            | TYPE assignment

   50 multiple_expressions_functions: LEFT_BR expr
   51                               | NEWLINE LEFT_BR expr NEWLINE
   52                               | NEWLINE LEFT_BR NEWLINE multiple_expressions NEWLINE
   53                               | NEWLINE LEFT_BR NEWLINE multiple_expressions

   54 multiple_expressions: expr
   55                     | multiple_expressions expr
   56                     | multiple_expressions multiple_newline expr

   57 multiple_expressions_no_semi: expr_no_semi
   58                             | multiple_expressions_no_semi COMMA expr_no_semi

   59 scan_func: SCAN LEFT_PT IDENTIFIER RIGHT_PT

   60 len_func: LEN LEFT_PT STRING RIGHT_PT
   61         | LEN LEFT_PT array RIGHT_PT
   62         | LEN LEFT_PT IDENTIFIER RIGHT_PT

   63 cmp_func: CMP LEFT_PT STRING COMMA STRING RIGHT_PT
   64         | CMP LEFT_PT IDENTIFIER COMMA IDENTIFIER RIGHT_PT
   65         | CMP LEFT_PT STRING COMMA IDENTIFIER RIGHT_PT
   66         | CMP LEFT_PT IDENTIFIER COMMA STRING RIGHT_PT
   67         | CMP LEFT_PT number COMMA number RIGHT_PT

   68 func_def: FUNC IDENTIFIER LEFT_PT TYPE IDENTIFIER COMMA TYPE IDENTIFIER RIGHT_PT multiple_expressions_functions RIGHT_BR

   69 func_call: IDENTIFIER LEFT_PT term COMMA term RIGHT_PT

   70 cmp_operator: term CMP_OPERATOR term

   71 cmp_operator_multiple: cmp_operator
   72                      | cmp_operator CMP_OPERATOR term
   73                      | cmp_operator CMP_OPERATOR cmp_operator_multiple

   74 arith_operation: term
   75                | arith_operation PLUS arith_operation
   76                | arith_operation MINUS arith_operation
   77                | arith_operation TIMES arith_operation
   78                | arith_operation DIVIDE arith_operation
   79                | MINUS arith_operation
   80                | arith_operation POWER arith_operation
   81                | LEFT_PT arith_operation RIGHT_PT

   82 logical_operator: IDENTIFIER LOGIC_OPERATOR IDENTIFIER
   83                 | LOG_NOT IDENTIFIER
   84                 | cmp_operator LOGIC_OPERATOR cmp_operator
   85                 | LOG_NOT RIGHT_PT cmp_operator LEFT_PT

   86 logical_operator_multiple: logical_operator
   87                          | logical_operator LOGIC_OPERATOR IDENTIFIER
   88                          | LOG_NOT RIGHT_PT logical_operator LEFT_PT
   89                          | logical_operator LOGIC_OPERATOR logical_operator_multiple

   90 if_func: IF LEFT_PT cmp_operator_multiple RIGHT_PT expr_no_semi
   91        | IF LEFT_PT cmp_operator_multiple RIGHT_PT LEFT_BR multiple_expressions RIGHT_BR
   92        | IF LEFT_PT logical_operator_multiple RIGHT_PT expr_no_semi
   93        | IF LEFT_PT logical_operator_multiple RIGHT_PT LEFT_BR multiple_expressions RIGHT_BR

   94 while_func: WHILE LEFT_PT cmp_operator_multiple RIGHT_PT multiple_expressions_functions RIGHT_BR
   95           | WHILE LEFT_PT logical_operator_multiple RIGHT_PT multiple_expressions_functions RIGHT_BR

   96 for_func: FOR LEFT_PT assignment SEMICOLON cmp_operator_multiple SEMICOLON plus_minus RIGHT_PT multiple_expressions_functions RIGHT_BR
   97         | FOR LEFT_PT assignment SEMICOLON logical_operator_multiple SEMICOLON plus_minus RIGHT_PT multiple_expressions_functions RIGHT_BR

   98 plus_minus: DOUBLE_PLUS term
   99           | DOUBLE_MINUS term
  100           | term DOUBLE_PLUS
  101           | term DOUBLE_MINUS

  102 expr_assignment: IDENTIFIER ASSIGNOP arith_operation
  103                | IDENTIFIER ASSIGNOP cmp_operator_multiple
  104                | IDENTIFIER ASSIGNOP logical_operator_multiple
  105                | IDENTIFIER ASSIGNOP array_plus
  106                | IDENTIFIER ASSIGNOP values

  107 return: RETURN values

  108 expr_no_semi: scan_func
  109             | len_func
  110             | print_func
  111             | cmp_func
  112             | declaration
  113             | cmp_operator_multiple
  114             | logical_operator_multiple
  115             | if_func
  116             | ret
  117             | arith_operation

  118 expr: expr_no_semi SEMICOLON
  119     | print_func SEMICOLON
  120     | expr_assignment SEMICOLON
  121     | assignment SEMICOLON
  122     | func_def
  123     | func_call SEMICOLON
  124     | arith_operation SEMICOLON
  125     | while_func
  126     | for_func
  127     | array SEMICOLON
  128     | array_plus SEMICOLON
  129     | return SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256) 4
DELIMITER (258)
IDENTIFIER (259) 9 20 21 22 31 32 39 43 45 46 59 62 64 65 66 68 69
    82 83 87 102 103 104 105 106
KEYWORD (260)
STRING (261) 28 36 37 43 44 60 63 65 66
INTEGER (262) 6 13 14 38
FLOAT (263) 7 11 12
PLUS (264) 23 24 25 75
MINUS (265) 76 79
TIMES (266) 77
DIVIDE (267) 78
NEG (268) 8
POWER (269) 80
COMMENT (270)
UNKNOWN_TOKEN (271)
NEWLINE (272) 2 3 4 15 16 51 52 53
PRINT (273) 40 41 42 43 44 45 46
LEFT_PT (274) 40 41 42 43 44 45 46 59 60 61 62 63 64 65 66 67 68 69
    81 85 88 90 91 92 93 94 95 96 97
RIGHT_PT (275) 40 41 42 43 44 45 46 59 60 61 62 63 64 65 66 67 68 69
    81 85 88 90 91 92 93 94 95 96 97
SEMICOLON (276) 96 97 118 119 120 121 123 124 127 128 129
ASSIGNOP (277) 34 35 102 103 104 105 106
CMP_OPERATOR (278) 70 72 73
TYPE (279) 47 48 49 68
SCAN (280) 59
LEN (281) 60 61 62
CMP (282) 63 64 65 66 67
COMMA (283) 12 14 30 32 37 43 44 58 63 64 65 66 67 68 69
FUNC (284) 68
LEFT_BR (285) 50 51 52 53 91 93
RIGHT_BR (286) 68 91 93 94 95 96 97
IF (287) 90 91 92 93
WHILE (288) 94 95
FOR (289) 96 97
RETURN (290) 38 39 107
DOUBLE_PLUS (291) 98 100
DOUBLE_MINUS (292) 99 101
LOGIC_OPERATOR (293) 82 84 87 89
LOG_NOT (294) 83 85 88
RIGHT_AR (295) 17 18 19 20 21 22 23 24 25
LEFT_AR (296) 17 18 19 20 21 22 23 24 25
AMPERSAND (297)
BACKSLASH_NEWLINE (298)


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
program (45)
    on left: 1 2 3 4 5, on right: 0 2 3 4 5
number (46)
    on left: 6 7 8, on right: 8 10 67
term (47)
    on left: 9 10, on right: 26 69 70 72 74 98 99 100 101
multiple_float (48)
    on left: 11 12, on right: 12 18 21 24
multiple_int (49)
    on left: 13 14, on right: 14 17 20 23
multiple_newline (50)
    on left: 15 16, on right: 16 56
array (51)
    on left: 17 18 19 20 21 22, on right: 27 46 48 61 127
array_plus (52)
    on left: 23 24 25, on right: 105 128
values (53)
    on left: 26 27 28, on right: 29 30 106 107
multiple_values (54)
    on left: 29 30, on right: 30 35
variable_list (55)
    on left: 31 32, on right: 32 34 35 41 47
assignment (56)
    on left: 33 34 35, on right: 49 96 97 121
string (57)
    on left: 36 37, on right: 19 22 25 37 40
ret (58)
    on left: 38 39, on right: 116
print_func (59)
    on left: 40 41 42 43 44 45 46, on right: 110 119
declaration (60)
    on left: 47 48 49, on right: 112
multiple_expressions_functions (61)
    on left: 50 51 52 53, on right: 68 94 95 96 97
multiple_expressions (62)
    on left: 54 55 56, on right: 52 53 55 56 91 93
multiple_expressions_no_semi (63)
    on left: 57 58, on right: 42 58
scan_func (64)
    on left: 59, on right: 108
len_func (65)
    on left: 60 61 62, on right: 109
cmp_func (66)
    on left: 63 64 65 66 67, on right: 111
func_def (67)
    on left: 68, on right: 122
func_call (68)
    on left: 69, on right: 123
cmp_operator (69)
    on left: 70, on right: 71 72 73 84 85
cmp_operator_multiple (70)
    on left: 71 72 73, on right: 73 90 91 94 96 103 113
arith_operation (71)
    on left: 74 75 76 77 78 79 80 81, on right: 75 76 77 78 79 80 81
    102 117 124
logical_operator (72)
    on left: 82 83 84 85, on right: 86 87 88 89
logical_operator_multiple (73)
    on left: 86 87 88 89, on right: 89 92 93 95 97 104 114
if_func (74)
    on left: 90 91 92 93, on right: 115
while_func (75)
    on left: 94 95, on right: 125
for_func (76)
    on left: 96 97, on right: 126
plus_minus (77)
    on left: 98 99 100 101, on right: 96 97
expr_assignment (78)
    on left: 102 103 104 105 106, on right: 120
return (79)
    on left: 107, on right: 129
expr_no_semi (80)
    on left: 108 109 110 111 112 113 114 115 116 117, on right: 44
    57 58 90 92 118
expr (81)
    on left: 118 119 120 121 122 123 124 125 126 127 128 129, on right:
    3 5 50 51 54 55 56


state 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


state 1

    0 $accept: program . $end
    2 program: program . NEWLINE
    3        | program . expr NEWLINE
    4        | program . error NEWLINE
    5        | program . expr

    $end        shift, and go to state 2
    error       shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    MINUS       shift, and go to state 7
    NEG         shift, and go to state 8
    NEWLINE     shift, and go to state 9
    PRINT       shift, and go to state 10
    LEFT_PT     shift, and go to state 11
    TYPE        shift, and go to state 12
    SCAN        shift, and go to state 13
    LEN         shift, and go to state 14
    CMP         shift, and go to state 15
    FUNC        shift, and go to state 16
    IF          shift, and go to state 17
    WHILE       shift, and go to state 18
    FOR         shift, and go to state 19
    RETURN      shift, and go to state 20
    LOG_NOT     shift, and go to state 21
    LEFT_AR     shift, and go to state 22

    SEMICOLON  reduce using rule 33 (assignment)

    number                     go to state 23
    term                       go to state 24
    array                      go to state 25
    array_plus                 go to state 26
    variable_list              go to state 27
    assignment                 go to state 28
    ret                        go to state 29
    print_func                 go to state 30
    declaration                go to state 31
    scan_func                  go to state 32
    len_func                   go to state 33
    cmp_func                   go to state 34
    func_def                   go to state 35
    func_call                  go to state 36
    cmp_operator               go to state 37
    cmp_operator_multiple      go to state 38
    arith_operation            go to state 39
    logical_operator           go to state 40
    logical_operator_multiple  go to state 41
    if_func                    go to state 42
    while_func                 go to state 43
    for_func                   go to state 44
    expr_assignment            go to state 45
    return                     go to state 46
    expr_no_semi               go to state 47
    expr                       go to state 48


state 2

    0 $accept: program $end .

    $default  accept


state 3

    4 program: program error . NEWLINE

    NEWLINE  shift, and go to state 49


state 4

    9 term: IDENTIFIER .
   20 array: IDENTIFIER . LEFT_AR multiple_int RIGHT_AR
   21      | IDENTIFIER . LEFT_AR multiple_float RIGHT_AR
   22      | IDENTIFIER . LEFT_AR string RIGHT_AR
   31 variable_list: IDENTIFIER .
   32              | IDENTIFIER . COMMA variable_list
   69 func_call: IDENTIFIER . LEFT_PT term COMMA term RIGHT_PT
   82 logical_operator: IDENTIFIER . LOGIC_OPERATOR IDENTIFIER
  102 expr_assignment: IDENTIFIER . ASSIGNOP arith_operation
  103                | IDENTIFIER . ASSIGNOP cmp_operator_multiple
  104                | IDENTIFIER . ASSIGNOP logical_operator_multiple
  105                | IDENTIFIER . ASSIGNOP array_plus
  106                | IDENTIFIER . ASSIGNOP values

    LEFT_PT         shift, and go to state 50
    ASSIGNOP        shift, and go to state 51
    COMMA           shift, and go to state 52
    LOGIC_OPERATOR  shift, and go to state 53
    LEFT_AR         shift, and go to state 54

    ASSIGNOP  [reduce using rule 31 (variable_list)]
    $default  reduce using rule 9 (term)


state 5

    6 number: INTEGER .

    $default  reduce using rule 6 (number)


state 6

    7 number: FLOAT .

    $default  reduce using rule 7 (number)


state 7

   79 arith_operation: MINUS . arith_operation

    IDENTIFIER  shift, and go to state 55
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    MINUS       shift, and go to state 7
    NEG         shift, and go to state 8
    LEFT_PT     shift, and go to state 11

    number           go to state 23
    term             go to state 56
    arith_operation  go to state 57


state 8

    8 number: NEG . number

    INTEGER  shift, and go to state 5
    FLOAT    shift, and go to state 6
    NEG      shift, and go to state 8

    number  go to state 58


state 9

    2 program: program NEWLINE .

    $default  reduce using rule 2 (program)


state 10

   40 print_func: PRINT . LEFT_PT string RIGHT_PT
   41           | PRINT . LEFT_PT variable_list RIGHT_PT
   42           | PRINT . LEFT_PT multiple_expressions_no_semi RIGHT_PT
   43           | PRINT . LEFT_PT STRING COMMA IDENTIFIER RIGHT_PT
   44           | PRINT . LEFT_PT STRING COMMA expr_no_semi RIGHT_PT
   45           | PRINT . LEFT_PT IDENTIFIER RIGHT_PT
   46           | PRINT . LEFT_PT IDENTIFIER array RIGHT_PT

    LEFT_PT  shift, and go to state 59


state 11

   81 arith_operation: LEFT_PT . arith_operation RIGHT_PT

    IDENTIFIER  shift, and go to state 55
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    MINUS       shift, and go to state 7
    NEG         shift, and go to state 8
    LEFT_PT     shift, and go to state 11

    number           go to state 23
    term             go to state 56
    arith_operation  go to state 60


state 12

   47 declaration: TYPE . variable_list
   48            | TYPE . array
   49            | TYPE . assignment

    IDENTIFIER  shift, and go to state 61
    LEFT_AR     shift, and go to state 62

    $default  reduce using rule 33 (assignment)

    array          go to state 63
    variable_list  go to state 64
    assignment     go to state 65


state 13

   59 scan_func: SCAN . LEFT_PT IDENTIFIER RIGHT_PT

    LEFT_PT  shift, and go to state 66


state 14

   60 len_func: LEN . LEFT_PT STRING RIGHT_PT
   61         | LEN . LEFT_PT array RIGHT_PT
   62         | LEN . LEFT_PT IDENTIFIER RIGHT_PT

    LEFT_PT  shift, and go to state 67


state 15

   63 cmp_func: CMP . LEFT_PT STRING COMMA STRING RIGHT_PT
   64         | CMP . LEFT_PT IDENTIFIER COMMA IDENTIFIER RIGHT_PT
   65         | CMP . LEFT_PT STRING COMMA IDENTIFIER RIGHT_PT
   66         | CMP . LEFT_PT IDENTIFIER COMMA STRING RIGHT_PT
   67         | CMP . LEFT_PT number COMMA number RIGHT_PT

    LEFT_PT  shift, and go to state 68


state 16

   68 func_def: FUNC . IDENTIFIER LEFT_PT TYPE IDENTIFIER COMMA TYPE IDENTIFIER RIGHT_PT multiple_expressions_functions RIGHT_BR

    IDENTIFIER  shift, and go to state 69


state 17

   90 if_func: IF . LEFT_PT cmp_operator_multiple RIGHT_PT expr_no_semi
   91        | IF . LEFT_PT cmp_operator_multiple RIGHT_PT LEFT_BR multiple_expressions RIGHT_BR
   92        | IF . LEFT_PT logical_operator_multiple RIGHT_PT expr_no_semi
   93        | IF . LEFT_PT logical_operator_multiple RIGHT_PT LEFT_BR multiple_expressions RIGHT_BR

    LEFT_PT  shift, and go to state 70


state 18

   94 while_func: WHILE . LEFT_PT cmp_operator_multiple RIGHT_PT multiple_expressions_functions RIGHT_BR
   95           | WHILE . LEFT_PT logical_operator_multiple RIGHT_PT multiple_expressions_functions RIGHT_BR

    LEFT_PT  shift, and go to state 71


state 19

   96 for_func: FOR . LEFT_PT assignment SEMICOLON cmp_operator_multiple SEMICOLON plus_minus RIGHT_PT multiple_expressions_functions RIGHT_BR
   97         | FOR . LEFT_PT assignment SEMICOLON logical_operator_multiple SEMICOLON plus_minus RIGHT_PT multiple_expressions_functions RIGHT_BR

    LEFT_PT  shift, and go to state 72


state 20

   38 ret: RETURN . INTEGER
   39    | RETURN . IDENTIFIER
  107 return: RETURN . values

    IDENTIFIER  shift, and go to state 73
    STRING      shift, and go to state 74
    INTEGER     shift, and go to state 75
    FLOAT       shift, and go to state 6
    NEG         shift, and go to state 8
    LEFT_AR     shift, and go to state 62

    number  go to state 23
    term    go to state 76
    array   go to state 77
    values  go to state 78


state 21

   83 logical_operator: LOG_NOT . IDENTIFIER
   85                 | LOG_NOT . RIGHT_PT cmp_operator LEFT_PT
   88 logical_operator_multiple: LOG_NOT . RIGHT_PT logical_operator LEFT_PT

    IDENTIFIER  shift, and go to state 79
    RIGHT_PT    shift, and go to state 80


state 22

   17 array: LEFT_AR . multiple_int RIGHT_AR
   18      | LEFT_AR . multiple_float RIGHT_AR
   19      | LEFT_AR . string RIGHT_AR
   23 array_plus: LEFT_AR . multiple_int RIGHT_AR PLUS LEFT_AR multiple_int RIGHT_AR
   24           | LEFT_AR . multiple_float RIGHT_AR PLUS LEFT_AR multiple_float RIGHT_AR
   25           | LEFT_AR . string RIGHT_AR PLUS LEFT_AR string RIGHT_AR

    STRING   shift, and go to state 81
    INTEGER  shift, and go to state 82
    FLOAT    shift, and go to state 83

    multiple_float  go to state 84
    multiple_int    go to state 85
    string          go to state 86


state 23

   10 term: number .

    $default  reduce using rule 10 (term)


state 24

   70 cmp_operator: term . CMP_OPERATOR term
   74 arith_operation: term .

    CMP_OPERATOR  shift, and go to state 87

    $default  reduce using rule 74 (arith_operation)


state 25

  127 expr: array . SEMICOLON

    SEMICOLON  shift, and go to state 88


state 26

  128 expr: array_plus . SEMICOLON

    SEMICOLON  shift, and go to state 89


state 27

   34 assignment: variable_list . ASSIGNOP variable_list
   35           | variable_list . ASSIGNOP multiple_values

    ASSIGNOP  shift, and go to state 90


state 28

  121 expr: assignment . SEMICOLON

    SEMICOLON  shift, and go to state 91


state 29

  116 expr_no_semi: ret .

    $default  reduce using rule 116 (expr_no_semi)


state 30

  110 expr_no_semi: print_func .
  119 expr: print_func . SEMICOLON

    SEMICOLON  shift, and go to state 92

    SEMICOLON  [reduce using rule 110 (expr_no_semi)]


state 31

  112 expr_no_semi: declaration .

    $default  reduce using rule 112 (expr_no_semi)


state 32

  108 expr_no_semi: scan_func .

    $default  reduce using rule 108 (expr_no_semi)


state 33

  109 expr_no_semi: len_func .

    $default  reduce using rule 109 (expr_no_semi)


state 34

  111 expr_no_semi: cmp_func .

    $default  reduce using rule 111 (expr_no_semi)


state 35

  122 expr: func_def .

    $default  reduce using rule 122 (expr)


state 36

  123 expr: func_call . SEMICOLON

    SEMICOLON  shift, and go to state 93


state 37

   71 cmp_operator_multiple: cmp_operator .
   72                      | cmp_operator . CMP_OPERATOR term
   73                      | cmp_operator . CMP_OPERATOR cmp_operator_multiple
   84 logical_operator: cmp_operator . LOGIC_OPERATOR cmp_operator

    CMP_OPERATOR    shift, and go to state 94
    LOGIC_OPERATOR  shift, and go to state 95

    $default  reduce using rule 71 (cmp_operator_multiple)


state 38

  113 expr_no_semi: cmp_operator_multiple .

    $default  reduce using rule 113 (expr_no_semi)


state 39

   75 arith_operation: arith_operation . PLUS arith_operation
   76                | arith_operation . MINUS arith_operation
   77                | arith_operation . TIMES arith_operation
   78                | arith_operation . DIVIDE arith_operation
   80                | arith_operation . POWER arith_operation
  117 expr_no_semi: arith_operation .
  124 expr: arith_operation . SEMICOLON

    PLUS       shift, and go to state 96
    MINUS      shift, and go to state 97
    TIMES      shift, and go to state 98
    DIVIDE     shift, and go to state 99
    POWER      shift, and go to state 100
    SEMICOLON  shift, and go to state 101

    SEMICOLON  [reduce using rule 117 (expr_no_semi)]


state 40

   86 logical_operator_multiple: logical_operator .
   87                          | logical_operator . LOGIC_OPERATOR IDENTIFIER
   89                          | logical_operator . LOGIC_OPERATOR logical_operator_multiple

    LOGIC_OPERATOR  shift, and go to state 102

    $default  reduce using rule 86 (logical_operator_multiple)


state 41

  114 expr_no_semi: logical_operator_multiple .

    $default  reduce using rule 114 (expr_no_semi)


state 42

  115 expr_no_semi: if_func .

    $default  reduce using rule 115 (expr_no_semi)


state 43

  125 expr: while_func .

    $default  reduce using rule 125 (expr)


state 44

  126 expr: for_func .

    $default  reduce using rule 126 (expr)


state 45

  120 expr: expr_assignment . SEMICOLON

    SEMICOLON  shift, and go to state 103


state 46

  129 expr: return . SEMICOLON

    SEMICOLON  shift, and go to state 104


state 47

  118 expr: expr_no_semi . SEMICOLON

    SEMICOLON  shift, and go to state 105


state 48

    3 program: program expr . NEWLINE
    5        | program expr .

    NEWLINE  shift, and go to state 106

    NEWLINE   [reduce using rule 5 (program)]
    $default  reduce using rule 5 (program)


state 49

    4 program: program error NEWLINE .

    $default  reduce using rule 4 (program)


state 50

   69 func_call: IDENTIFIER LEFT_PT . term COMMA term RIGHT_PT

    IDENTIFIER  shift, and go to state 55
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    NEG         shift, and go to state 8

    number  go to state 23
    term    go to state 107


state 51

  102 expr_assignment: IDENTIFIER ASSIGNOP . arith_operation
  103                | IDENTIFIER ASSIGNOP . cmp_operator_multiple
  104                | IDENTIFIER ASSIGNOP . logical_operator_multiple
  105                | IDENTIFIER ASSIGNOP . array_plus
  106                | IDENTIFIER ASSIGNOP . values

    IDENTIFIER  shift, and go to state 108
    STRING      shift, and go to state 74
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    MINUS       shift, and go to state 7
    NEG         shift, and go to state 8
    LEFT_PT     shift, and go to state 11
    LOG_NOT     shift, and go to state 21
    LEFT_AR     shift, and go to state 22

    number                     go to state 23
    term                       go to state 109
    array                      go to state 77
    array_plus                 go to state 110
    values                     go to state 111
    cmp_operator               go to state 37
    cmp_operator_multiple      go to state 112
    arith_operation            go to state 113
    logical_operator           go to state 40
    logical_operator_multiple  go to state 114


state 52

   32 variable_list: IDENTIFIER COMMA . variable_list

    IDENTIFIER  shift, and go to state 115

    variable_list  go to state 116


state 53

   82 logical_operator: IDENTIFIER LOGIC_OPERATOR . IDENTIFIER

    IDENTIFIER  shift, and go to state 117


state 54

   20 array: IDENTIFIER LEFT_AR . multiple_int RIGHT_AR
   21      | IDENTIFIER LEFT_AR . multiple_float RIGHT_AR
   22      | IDENTIFIER LEFT_AR . string RIGHT_AR

    STRING   shift, and go to state 81
    INTEGER  shift, and go to state 82
    FLOAT    shift, and go to state 83

    multiple_float  go to state 118
    multiple_int    go to state 119
    string          go to state 120


state 55

    9 term: IDENTIFIER .

    $default  reduce using rule 9 (term)


state 56

   74 arith_operation: term .

    $default  reduce using rule 74 (arith_operation)


state 57

   75 arith_operation: arith_operation . PLUS arith_operation
   76                | arith_operation . MINUS arith_operation
   77                | arith_operation . TIMES arith_operation
   78                | arith_operation . DIVIDE arith_operation
   79                | MINUS arith_operation .
   80                | arith_operation . POWER arith_operation

    POWER  shift, and go to state 100

    $default  reduce using rule 79 (arith_operation)


state 58

    8 number: NEG number .

    $default  reduce using rule 8 (number)


state 59

   40 print_func: PRINT LEFT_PT . string RIGHT_PT
   41           | PRINT LEFT_PT . variable_list RIGHT_PT
   42           | PRINT LEFT_PT . multiple_expressions_no_semi RIGHT_PT
   43           | PRINT LEFT_PT . STRING COMMA IDENTIFIER RIGHT_PT
   44           | PRINT LEFT_PT . STRING COMMA expr_no_semi RIGHT_PT
   45           | PRINT LEFT_PT . IDENTIFIER RIGHT_PT
   46           | PRINT LEFT_PT . IDENTIFIER array RIGHT_PT

    IDENTIFIER  shift, and go to state 121
    STRING      shift, and go to state 122
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    MINUS       shift, and go to state 7
    NEG         shift, and go to state 8
    PRINT       shift, and go to state 10
    LEFT_PT     shift, and go to state 11
    TYPE        shift, and go to state 12
    SCAN        shift, and go to state 13
    LEN         shift, and go to state 14
    CMP         shift, and go to state 15
    IF          shift, and go to state 17
    RETURN      shift, and go to state 123
    LOG_NOT     shift, and go to state 21

    number                        go to state 23
    term                          go to state 24
    variable_list                 go to state 124
    string                        go to state 125
    ret                           go to state 29
    print_func                    go to state 126
    declaration                   go to state 31
    multiple_expressions_no_semi  go to state 127
    scan_func                     go to state 32
    len_func                      go to state 33
    cmp_func                      go to state 34
    cmp_operator                  go to state 37
    cmp_operator_multiple         go to state 38
    arith_operation               go to state 128
    logical_operator              go to state 40
    logical_operator_multiple     go to state 41
    if_func                       go to state 42
    expr_no_semi                  go to state 129


state 60

   75 arith_operation: arith_operation . PLUS arith_operation
   76                | arith_operation . MINUS arith_operation
   77                | arith_operation . TIMES arith_operation
   78                | arith_operation . DIVIDE arith_operation
   80                | arith_operation . POWER arith_operation
   81                | LEFT_PT arith_operation . RIGHT_PT

    PLUS      shift, and go to state 96
    MINUS     shift, and go to state 97
    TIMES     shift, and go to state 98
    DIVIDE    shift, and go to state 99
    POWER     shift, and go to state 100
    RIGHT_PT  shift, and go to state 130


state 61

   20 array: IDENTIFIER . LEFT_AR multiple_int RIGHT_AR
   21      | IDENTIFIER . LEFT_AR multiple_float RIGHT_AR
   22      | IDENTIFIER . LEFT_AR string RIGHT_AR
   31 variable_list: IDENTIFIER .
   32              | IDENTIFIER . COMMA variable_list

    COMMA    shift, and go to state 52
    LEFT_AR  shift, and go to state 54

    COMMA     [reduce using rule 31 (variable_list)]
    $default  reduce using rule 31 (variable_list)


state 62

   17 array: LEFT_AR . multiple_int RIGHT_AR
   18      | LEFT_AR . multiple_float RIGHT_AR
   19      | LEFT_AR . string RIGHT_AR

    STRING   shift, and go to state 81
    INTEGER  shift, and go to state 82
    FLOAT    shift, and go to state 83

    multiple_float  go to state 131
    multiple_int    go to state 132
    string          go to state 133


state 63

   48 declaration: TYPE array .

    $default  reduce using rule 48 (declaration)


state 64

   34 assignment: variable_list . ASSIGNOP variable_list
   35           | variable_list . ASSIGNOP multiple_values
   47 declaration: TYPE variable_list .

    ASSIGNOP  shift, and go to state 90

    $default  reduce using rule 47 (declaration)


state 65

   49 declaration: TYPE assignment .

    $default  reduce using rule 49 (declaration)


state 66

   59 scan_func: SCAN LEFT_PT . IDENTIFIER RIGHT_PT

    IDENTIFIER  shift, and go to state 134


state 67

   60 len_func: LEN LEFT_PT . STRING RIGHT_PT
   61         | LEN LEFT_PT . array RIGHT_PT
   62         | LEN LEFT_PT . IDENTIFIER RIGHT_PT

    IDENTIFIER  shift, and go to state 135
    STRING      shift, and go to state 136
    LEFT_AR     shift, and go to state 62

    array  go to state 137


state 68

   63 cmp_func: CMP LEFT_PT . STRING COMMA STRING RIGHT_PT
   64         | CMP LEFT_PT . IDENTIFIER COMMA IDENTIFIER RIGHT_PT
   65         | CMP LEFT_PT . STRING COMMA IDENTIFIER RIGHT_PT
   66         | CMP LEFT_PT . IDENTIFIER COMMA STRING RIGHT_PT
   67         | CMP LEFT_PT . number COMMA number RIGHT_PT

    IDENTIFIER  shift, and go to state 138
    STRING      shift, and go to state 139
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    NEG         shift, and go to state 8

    number  go to state 140


state 69

   68 func_def: FUNC IDENTIFIER . LEFT_PT TYPE IDENTIFIER COMMA TYPE IDENTIFIER RIGHT_PT multiple_expressions_functions RIGHT_BR

    LEFT_PT  shift, and go to state 141


state 70

   90 if_func: IF LEFT_PT . cmp_operator_multiple RIGHT_PT expr_no_semi
   91        | IF LEFT_PT . cmp_operator_multiple RIGHT_PT LEFT_BR multiple_expressions RIGHT_BR
   92        | IF LEFT_PT . logical_operator_multiple RIGHT_PT expr_no_semi
   93        | IF LEFT_PT . logical_operator_multiple RIGHT_PT LEFT_BR multiple_expressions RIGHT_BR

    IDENTIFIER  shift, and go to state 142
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    NEG         shift, and go to state 8
    LOG_NOT     shift, and go to state 21

    number                     go to state 23
    term                       go to state 143
    cmp_operator               go to state 37
    cmp_operator_multiple      go to state 144
    logical_operator           go to state 40
    logical_operator_multiple  go to state 145


state 71

   94 while_func: WHILE LEFT_PT . cmp_operator_multiple RIGHT_PT multiple_expressions_functions RIGHT_BR
   95           | WHILE LEFT_PT . logical_operator_multiple RIGHT_PT multiple_expressions_functions RIGHT_BR

    IDENTIFIER  shift, and go to state 142
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    NEG         shift, and go to state 8
    LOG_NOT     shift, and go to state 21

    number                     go to state 23
    term                       go to state 143
    cmp_operator               go to state 37
    cmp_operator_multiple      go to state 146
    logical_operator           go to state 40
    logical_operator_multiple  go to state 147


state 72

   96 for_func: FOR LEFT_PT . assignment SEMICOLON cmp_operator_multiple SEMICOLON plus_minus RIGHT_PT multiple_expressions_functions RIGHT_BR
   97         | FOR LEFT_PT . assignment SEMICOLON logical_operator_multiple SEMICOLON plus_minus RIGHT_PT multiple_expressions_functions RIGHT_BR

    IDENTIFIER  shift, and go to state 115

    $default  reduce using rule 33 (assignment)

    variable_list  go to state 27
    assignment     go to state 148


state 73

    9 term: IDENTIFIER .
   20 array: IDENTIFIER . LEFT_AR multiple_int RIGHT_AR
   21      | IDENTIFIER . LEFT_AR multiple_float RIGHT_AR
   22      | IDENTIFIER . LEFT_AR string RIGHT_AR
   39 ret: RETURN IDENTIFIER .

    LEFT_AR  shift, and go to state 54

    SEMICOLON  reduce using rule 9 (term)
    SEMICOLON  [reduce using rule 39 (ret)]
    $default   reduce using rule 9 (term)


state 74

   28 values: STRING .

    $default  reduce using rule 28 (values)


state 75

    6 number: INTEGER .
   38 ret: RETURN INTEGER .

    SEMICOLON  reduce using rule 6 (number)
    SEMICOLON  [reduce using rule 38 (ret)]
    $default   reduce using rule 6 (number)


state 76

   26 values: term .

    $default  reduce using rule 26 (values)


state 77

   27 values: array .

    $default  reduce using rule 27 (values)


state 78

  107 return: RETURN values .

    $default  reduce using rule 107 (return)


state 79

   83 logical_operator: LOG_NOT IDENTIFIER .

    $default  reduce using rule 83 (logical_operator)


state 80

   85 logical_operator: LOG_NOT RIGHT_PT . cmp_operator LEFT_PT
   88 logical_operator_multiple: LOG_NOT RIGHT_PT . logical_operator LEFT_PT

    IDENTIFIER  shift, and go to state 142
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    NEG         shift, and go to state 8
    LOG_NOT     shift, and go to state 149

    number            go to state 23
    term              go to state 143
    cmp_operator      go to state 150
    logical_operator  go to state 151


state 81

   36 string: STRING .

    $default  reduce using rule 36 (string)


state 82

   13 multiple_int: INTEGER .
   14             | INTEGER . COMMA multiple_int

    COMMA  shift, and go to state 152

    $default  reduce using rule 13 (multiple_int)


state 83

   11 multiple_float: FLOAT .
   12               | FLOAT . COMMA multiple_float

    COMMA  shift, and go to state 153

    $default  reduce using rule 11 (multiple_float)


state 84

   18 array: LEFT_AR multiple_float . RIGHT_AR
   24 array_plus: LEFT_AR multiple_float . RIGHT_AR PLUS LEFT_AR multiple_float RIGHT_AR

    RIGHT_AR  shift, and go to state 154


state 85

   17 array: LEFT_AR multiple_int . RIGHT_AR
   23 array_plus: LEFT_AR multiple_int . RIGHT_AR PLUS LEFT_AR multiple_int RIGHT_AR

    RIGHT_AR  shift, and go to state 155


state 86

   19 array: LEFT_AR string . RIGHT_AR
   25 array_plus: LEFT_AR string . RIGHT_AR PLUS LEFT_AR string RIGHT_AR
   37 string: string . COMMA STRING

    COMMA     shift, and go to state 156
    RIGHT_AR  shift, and go to state 157


state 87

   70 cmp_operator: term CMP_OPERATOR . term

    IDENTIFIER  shift, and go to state 55
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    NEG         shift, and go to state 8

    number  go to state 23
    term    go to state 158


state 88

  127 expr: array SEMICOLON .

    $default  reduce using rule 127 (expr)


state 89

  128 expr: array_plus SEMICOLON .

    $default  reduce using rule 128 (expr)


state 90

   34 assignment: variable_list ASSIGNOP . variable_list
   35           | variable_list ASSIGNOP . multiple_values

    IDENTIFIER  shift, and go to state 159
    STRING      shift, and go to state 74
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    NEG         shift, and go to state 8
    LEFT_AR     shift, and go to state 62

    number           go to state 23
    term             go to state 76
    array            go to state 77
    values           go to state 160
    multiple_values  go to state 161
    variable_list    go to state 162


state 91

  121 expr: assignment SEMICOLON .

    $default  reduce using rule 121 (expr)


state 92

  119 expr: print_func SEMICOLON .

    $default  reduce using rule 119 (expr)


state 93

  123 expr: func_call SEMICOLON .

    $default  reduce using rule 123 (expr)


state 94

   72 cmp_operator_multiple: cmp_operator CMP_OPERATOR . term
   73                      | cmp_operator CMP_OPERATOR . cmp_operator_multiple

    IDENTIFIER  shift, and go to state 55
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    NEG         shift, and go to state 8

    number                 go to state 23
    term                   go to state 163
    cmp_operator           go to state 164
    cmp_operator_multiple  go to state 165


state 95

   84 logical_operator: cmp_operator LOGIC_OPERATOR . cmp_operator

    IDENTIFIER  shift, and go to state 55
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    NEG         shift, and go to state 8

    number        go to state 23
    term          go to state 143
    cmp_operator  go to state 166


state 96

   75 arith_operation: arith_operation PLUS . arith_operation

    IDENTIFIER  shift, and go to state 55
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    MINUS       shift, and go to state 7
    NEG         shift, and go to state 8
    LEFT_PT     shift, and go to state 11

    number           go to state 23
    term             go to state 56
    arith_operation  go to state 167


state 97

   76 arith_operation: arith_operation MINUS . arith_operation

    IDENTIFIER  shift, and go to state 55
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    MINUS       shift, and go to state 7
    NEG         shift, and go to state 8
    LEFT_PT     shift, and go to state 11

    number           go to state 23
    term             go to state 56
    arith_operation  go to state 168


state 98

   77 arith_operation: arith_operation TIMES . arith_operation

    IDENTIFIER  shift, and go to state 55
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    MINUS       shift, and go to state 7
    NEG         shift, and go to state 8
    LEFT_PT     shift, and go to state 11

    number           go to state 23
    term             go to state 56
    arith_operation  go to state 169


state 99

   78 arith_operation: arith_operation DIVIDE . arith_operation

    IDENTIFIER  shift, and go to state 55
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    MINUS       shift, and go to state 7
    NEG         shift, and go to state 8
    LEFT_PT     shift, and go to state 11

    number           go to state 23
    term             go to state 56
    arith_operation  go to state 170


state 100

   80 arith_operation: arith_operation POWER . arith_operation

    IDENTIFIER  shift, and go to state 55
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    MINUS       shift, and go to state 7
    NEG         shift, and go to state 8
    LEFT_PT     shift, and go to state 11

    number           go to state 23
    term             go to state 56
    arith_operation  go to state 171


state 101

  124 expr: arith_operation SEMICOLON .

    $default  reduce using rule 124 (expr)


state 102

   87 logical_operator_multiple: logical_operator LOGIC_OPERATOR . IDENTIFIER
   89                          | logical_operator LOGIC_OPERATOR . logical_operator_multiple

    IDENTIFIER  shift, and go to state 172
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    NEG         shift, and go to state 8
    LOG_NOT     shift, and go to state 21

    number                     go to state 23
    term                       go to state 143
    cmp_operator               go to state 173
    logical_operator           go to state 40
    logical_operator_multiple  go to state 174


state 103

  120 expr: expr_assignment SEMICOLON .

    $default  reduce using rule 120 (expr)


state 104

  129 expr: return SEMICOLON .

    $default  reduce using rule 129 (expr)


state 105

  118 expr: expr_no_semi SEMICOLON .

    $default  reduce using rule 118 (expr)


state 106

    3 program: program expr NEWLINE .

    $default  reduce using rule 3 (program)


state 107

   69 func_call: IDENTIFIER LEFT_PT term . COMMA term RIGHT_PT

    COMMA  shift, and go to state 175


state 108

    9 term: IDENTIFIER .
   20 array: IDENTIFIER . LEFT_AR multiple_int RIGHT_AR
   21      | IDENTIFIER . LEFT_AR multiple_float RIGHT_AR
   22      | IDENTIFIER . LEFT_AR string RIGHT_AR
   82 logical_operator: IDENTIFIER . LOGIC_OPERATOR IDENTIFIER

    LOGIC_OPERATOR  shift, and go to state 53
    LEFT_AR         shift, and go to state 54

    $default  reduce using rule 9 (term)


state 109

   26 values: term .
   70 cmp_operator: term . CMP_OPERATOR term
   74 arith_operation: term .

    CMP_OPERATOR  shift, and go to state 87

    SEMICOLON  reduce using rule 26 (values)
    SEMICOLON  [reduce using rule 74 (arith_operation)]
    $default   reduce using rule 74 (arith_operation)


state 110

  105 expr_assignment: IDENTIFIER ASSIGNOP array_plus .

    $default  reduce using rule 105 (expr_assignment)


state 111

  106 expr_assignment: IDENTIFIER ASSIGNOP values .

    $default  reduce using rule 106 (expr_assignment)


state 112

  103 expr_assignment: IDENTIFIER ASSIGNOP cmp_operator_multiple .

    $default  reduce using rule 103 (expr_assignment)


state 113

   75 arith_operation: arith_operation . PLUS arith_operation
   76                | arith_operation . MINUS arith_operation
   77                | arith_operation . TIMES arith_operation
   78                | arith_operation . DIVIDE arith_operation
   80                | arith_operation . POWER arith_operation
  102 expr_assignment: IDENTIFIER ASSIGNOP arith_operation .

    PLUS    shift, and go to state 96
    MINUS   shift, and go to state 97
    TIMES   shift, and go to state 98
    DIVIDE  shift, and go to state 99
    POWER   shift, and go to state 100

    $default  reduce using rule 102 (expr_assignment)


state 114

  104 expr_assignment: IDENTIFIER ASSIGNOP logical_operator_multiple .

    $default  reduce using rule 104 (expr_assignment)


state 115

   31 variable_list: IDENTIFIER .
   32              | IDENTIFIER . COMMA variable_list

    COMMA  shift, and go to state 52

    COMMA     [reduce using rule 31 (variable_list)]
    $default  reduce using rule 31 (variable_list)


state 116

   32 variable_list: IDENTIFIER COMMA variable_list .

    $default  reduce using rule 32 (variable_list)


state 117

   82 logical_operator: IDENTIFIER LOGIC_OPERATOR IDENTIFIER .

    $default  reduce using rule 82 (logical_operator)


state 118

   21 array: IDENTIFIER LEFT_AR multiple_float . RIGHT_AR

    RIGHT_AR  shift, and go to state 176


state 119

   20 array: IDENTIFIER LEFT_AR multiple_int . RIGHT_AR

    RIGHT_AR  shift, and go to state 177


state 120

   22 array: IDENTIFIER LEFT_AR string . RIGHT_AR
   37 string: string . COMMA STRING

    COMMA     shift, and go to state 156
    RIGHT_AR  shift, and go to state 178


state 121

    9 term: IDENTIFIER .
   31 variable_list: IDENTIFIER .
   32              | IDENTIFIER . COMMA variable_list
   45 print_func: PRINT LEFT_PT IDENTIFIER . RIGHT_PT
   46           | PRINT LEFT_PT IDENTIFIER . array RIGHT_PT
   82 logical_operator: IDENTIFIER . LOGIC_OPERATOR IDENTIFIER

    IDENTIFIER      shift, and go to state 179
    RIGHT_PT        shift, and go to state 180
    COMMA           shift, and go to state 52
    LOGIC_OPERATOR  shift, and go to state 53
    LEFT_AR         shift, and go to state 62

    RIGHT_PT  [reduce using rule 9 (term)]
    RIGHT_PT  [reduce using rule 31 (variable_list)]
    COMMA     [reduce using rule 9 (term)]
    $default  reduce using rule 9 (term)

    array  go to state 181


state 122

   36 string: STRING .
   43 print_func: PRINT LEFT_PT STRING . COMMA IDENTIFIER RIGHT_PT
   44           | PRINT LEFT_PT STRING . COMMA expr_no_semi RIGHT_PT

    COMMA  shift, and go to state 182

    COMMA     [reduce using rule 36 (string)]
    $default  reduce using rule 36 (string)


state 123

   38 ret: RETURN . INTEGER
   39    | RETURN . IDENTIFIER

    IDENTIFIER  shift, and go to state 183
    INTEGER     shift, and go to state 184


state 124

   41 print_func: PRINT LEFT_PT variable_list . RIGHT_PT

    RIGHT_PT  shift, and go to state 185


state 125

   37 string: string . COMMA STRING
   40 print_func: PRINT LEFT_PT string . RIGHT_PT

    RIGHT_PT  shift, and go to state 186
    COMMA     shift, and go to state 156


state 126

  110 expr_no_semi: print_func .

    $default  reduce using rule 110 (expr_no_semi)


state 127

   42 print_func: PRINT LEFT_PT multiple_expressions_no_semi . RIGHT_PT
   58 multiple_expressions_no_semi: multiple_expressions_no_semi . COMMA expr_no_semi

    RIGHT_PT  shift, and go to state 187
    COMMA     shift, and go to state 188


state 128

   75 arith_operation: arith_operation . PLUS arith_operation
   76                | arith_operation . MINUS arith_operation
   77                | arith_operation . TIMES arith_operation
   78                | arith_operation . DIVIDE arith_operation
   80                | arith_operation . POWER arith_operation
  117 expr_no_semi: arith_operation .

    PLUS    shift, and go to state 96
    MINUS   shift, and go to state 97
    TIMES   shift, and go to state 98
    DIVIDE  shift, and go to state 99
    POWER   shift, and go to state 100

    $default  reduce using rule 117 (expr_no_semi)


state 129

   57 multiple_expressions_no_semi: expr_no_semi .

    $default  reduce using rule 57 (multiple_expressions_no_semi)


state 130

   81 arith_operation: LEFT_PT arith_operation RIGHT_PT .

    $default  reduce using rule 81 (arith_operation)


state 131

   18 array: LEFT_AR multiple_float . RIGHT_AR

    RIGHT_AR  shift, and go to state 189


state 132

   17 array: LEFT_AR multiple_int . RIGHT_AR

    RIGHT_AR  shift, and go to state 190


state 133

   19 array: LEFT_AR string . RIGHT_AR
   37 string: string . COMMA STRING

    COMMA     shift, and go to state 156
    RIGHT_AR  shift, and go to state 191


state 134

   59 scan_func: SCAN LEFT_PT IDENTIFIER . RIGHT_PT

    RIGHT_PT  shift, and go to state 192


state 135

   20 array: IDENTIFIER . LEFT_AR multiple_int RIGHT_AR
   21      | IDENTIFIER . LEFT_AR multiple_float RIGHT_AR
   22      | IDENTIFIER . LEFT_AR string RIGHT_AR
   62 len_func: LEN LEFT_PT IDENTIFIER . RIGHT_PT

    RIGHT_PT  shift, and go to state 193
    LEFT_AR   shift, and go to state 54


state 136

   60 len_func: LEN LEFT_PT STRING . RIGHT_PT

    RIGHT_PT  shift, and go to state 194


state 137

   61 len_func: LEN LEFT_PT array . RIGHT_PT

    RIGHT_PT  shift, and go to state 195


state 138

   64 cmp_func: CMP LEFT_PT IDENTIFIER . COMMA IDENTIFIER RIGHT_PT
   66         | CMP LEFT_PT IDENTIFIER . COMMA STRING RIGHT_PT

    COMMA  shift, and go to state 196


state 139

   63 cmp_func: CMP LEFT_PT STRING . COMMA STRING RIGHT_PT
   65         | CMP LEFT_PT STRING . COMMA IDENTIFIER RIGHT_PT

    COMMA  shift, and go to state 197


state 140

   67 cmp_func: CMP LEFT_PT number . COMMA number RIGHT_PT

    COMMA  shift, and go to state 198


state 141

   68 func_def: FUNC IDENTIFIER LEFT_PT . TYPE IDENTIFIER COMMA TYPE IDENTIFIER RIGHT_PT multiple_expressions_functions RIGHT_BR

    TYPE  shift, and go to state 199


state 142

    9 term: IDENTIFIER .
   82 logical_operator: IDENTIFIER . LOGIC_OPERATOR IDENTIFIER

    LOGIC_OPERATOR  shift, and go to state 53

    $default  reduce using rule 9 (term)


state 143

   70 cmp_operator: term . CMP_OPERATOR term

    CMP_OPERATOR  shift, and go to state 87


state 144

   90 if_func: IF LEFT_PT cmp_operator_multiple . RIGHT_PT expr_no_semi
   91        | IF LEFT_PT cmp_operator_multiple . RIGHT_PT LEFT_BR multiple_expressions RIGHT_BR

    RIGHT_PT  shift, and go to state 200


state 145

   92 if_func: IF LEFT_PT logical_operator_multiple . RIGHT_PT expr_no_semi
   93        | IF LEFT_PT logical_operator_multiple . RIGHT_PT LEFT_BR multiple_expressions RIGHT_BR

    RIGHT_PT  shift, and go to state 201


state 146

   94 while_func: WHILE LEFT_PT cmp_operator_multiple . RIGHT_PT multiple_expressions_functions RIGHT_BR

    RIGHT_PT  shift, and go to state 202


state 147

   95 while_func: WHILE LEFT_PT logical_operator_multiple . RIGHT_PT multiple_expressions_functions RIGHT_BR

    RIGHT_PT  shift, and go to state 203


state 148

   96 for_func: FOR LEFT_PT assignment . SEMICOLON cmp_operator_multiple SEMICOLON plus_minus RIGHT_PT multiple_expressions_functions RIGHT_BR
   97         | FOR LEFT_PT assignment . SEMICOLON logical_operator_multiple SEMICOLON plus_minus RIGHT_PT multiple_expressions_functions RIGHT_BR

    SEMICOLON  shift, and go to state 204


state 149

   83 logical_operator: LOG_NOT . IDENTIFIER
   85                 | LOG_NOT . RIGHT_PT cmp_operator LEFT_PT

    IDENTIFIER  shift, and go to state 79
    RIGHT_PT    shift, and go to state 205


state 150

   84 logical_operator: cmp_operator . LOGIC_OPERATOR cmp_operator
   85                 | LOG_NOT RIGHT_PT cmp_operator . LEFT_PT

    LEFT_PT         shift, and go to state 206
    LOGIC_OPERATOR  shift, and go to state 95


state 151

   88 logical_operator_multiple: LOG_NOT RIGHT_PT logical_operator . LEFT_PT

    LEFT_PT  shift, and go to state 207


state 152

   14 multiple_int: INTEGER COMMA . multiple_int

    INTEGER  shift, and go to state 82

    multiple_int  go to state 208


state 153

   12 multiple_float: FLOAT COMMA . multiple_float

    FLOAT  shift, and go to state 83

    multiple_float  go to state 209


state 154

   18 array: LEFT_AR multiple_float RIGHT_AR .
   24 array_plus: LEFT_AR multiple_float RIGHT_AR . PLUS LEFT_AR multiple_float RIGHT_AR

    PLUS  shift, and go to state 210

    $default  reduce using rule 18 (array)


state 155

   17 array: LEFT_AR multiple_int RIGHT_AR .
   23 array_plus: LEFT_AR multiple_int RIGHT_AR . PLUS LEFT_AR multiple_int RIGHT_AR

    PLUS  shift, and go to state 211

    $default  reduce using rule 17 (array)


state 156

   37 string: string COMMA . STRING

    STRING  shift, and go to state 212


state 157

   19 array: LEFT_AR string RIGHT_AR .
   25 array_plus: LEFT_AR string RIGHT_AR . PLUS LEFT_AR string RIGHT_AR

    PLUS  shift, and go to state 213

    $default  reduce using rule 19 (array)


state 158

   70 cmp_operator: term CMP_OPERATOR term .

    $default  reduce using rule 70 (cmp_operator)


state 159

    9 term: IDENTIFIER .
   20 array: IDENTIFIER . LEFT_AR multiple_int RIGHT_AR
   21      | IDENTIFIER . LEFT_AR multiple_float RIGHT_AR
   22      | IDENTIFIER . LEFT_AR string RIGHT_AR
   31 variable_list: IDENTIFIER .
   32              | IDENTIFIER . COMMA variable_list

    COMMA    shift, and go to state 52
    LEFT_AR  shift, and go to state 54

    RIGHT_PT   reduce using rule 9 (term)
    RIGHT_PT   [reduce using rule 31 (variable_list)]
    SEMICOLON  reduce using rule 9 (term)
    SEMICOLON  [reduce using rule 31 (variable_list)]
    COMMA      [reduce using rule 9 (term)]
    COMMA      [reduce using rule 31 (variable_list)]
    $default   reduce using rule 9 (term)


state 160

   29 multiple_values: values .
   30                | values . COMMA multiple_values

    COMMA  shift, and go to state 214

    COMMA     [reduce using rule 29 (multiple_values)]
    $default  reduce using rule 29 (multiple_values)


state 161

   35 assignment: variable_list ASSIGNOP multiple_values .

    $default  reduce using rule 35 (assignment)


state 162

   34 assignment: variable_list ASSIGNOP variable_list .

    $default  reduce using rule 34 (assignment)


state 163

   70 cmp_operator: term . CMP_OPERATOR term
   72 cmp_operator_multiple: cmp_operator CMP_OPERATOR term .

    CMP_OPERATOR  shift, and go to state 87

    $default  reduce using rule 72 (cmp_operator_multiple)


state 164

   71 cmp_operator_multiple: cmp_operator .
   72                      | cmp_operator . CMP_OPERATOR term
   73                      | cmp_operator . CMP_OPERATOR cmp_operator_multiple

    CMP_OPERATOR  shift, and go to state 94

    $default  reduce using rule 71 (cmp_operator_multiple)


state 165

   73 cmp_operator_multiple: cmp_operator CMP_OPERATOR cmp_operator_multiple .

    $default  reduce using rule 73 (cmp_operator_multiple)


state 166

   84 logical_operator: cmp_operator LOGIC_OPERATOR cmp_operator .

    $default  reduce using rule 84 (logical_operator)


state 167

   75 arith_operation: arith_operation . PLUS arith_operation
   75                | arith_operation PLUS arith_operation .
   76                | arith_operation . MINUS arith_operation
   77                | arith_operation . TIMES arith_operation
   78                | arith_operation . DIVIDE arith_operation
   80                | arith_operation . POWER arith_operation

    TIMES   shift, and go to state 98
    DIVIDE  shift, and go to state 99
    POWER   shift, and go to state 100

    $default  reduce using rule 75 (arith_operation)


state 168

   75 arith_operation: arith_operation . PLUS arith_operation
   76                | arith_operation . MINUS arith_operation
   76                | arith_operation MINUS arith_operation .
   77                | arith_operation . TIMES arith_operation
   78                | arith_operation . DIVIDE arith_operation
   80                | arith_operation . POWER arith_operation

    TIMES   shift, and go to state 98
    DIVIDE  shift, and go to state 99
    POWER   shift, and go to state 100

    $default  reduce using rule 76 (arith_operation)


state 169

   75 arith_operation: arith_operation . PLUS arith_operation
   76                | arith_operation . MINUS arith_operation
   77                | arith_operation . TIMES arith_operation
   77                | arith_operation TIMES arith_operation .
   78                | arith_operation . DIVIDE arith_operation
   80                | arith_operation . POWER arith_operation

    POWER  shift, and go to state 100

    $default  reduce using rule 77 (arith_operation)


state 170

   75 arith_operation: arith_operation . PLUS arith_operation
   76                | arith_operation . MINUS arith_operation
   77                | arith_operation . TIMES arith_operation
   78                | arith_operation . DIVIDE arith_operation
   78                | arith_operation DIVIDE arith_operation .
   80                | arith_operation . POWER arith_operation

    POWER  shift, and go to state 100

    $default  reduce using rule 78 (arith_operation)


state 171

   75 arith_operation: arith_operation . PLUS arith_operation
   76                | arith_operation . MINUS arith_operation
   77                | arith_operation . TIMES arith_operation
   78                | arith_operation . DIVIDE arith_operation
   80                | arith_operation . POWER arith_operation
   80                | arith_operation POWER arith_operation .

    POWER  shift, and go to state 100

    $default  reduce using rule 80 (arith_operation)


state 172

    9 term: IDENTIFIER .
   82 logical_operator: IDENTIFIER . LOGIC_OPERATOR IDENTIFIER
   87 logical_operator_multiple: logical_operator LOGIC_OPERATOR IDENTIFIER .

    LOGIC_OPERATOR  shift, and go to state 53

    CMP_OPERATOR  reduce using rule 9 (term)
    $default      reduce using rule 87 (logical_operator_multiple)


state 173

   84 logical_operator: cmp_operator . LOGIC_OPERATOR cmp_operator

    LOGIC_OPERATOR  shift, and go to state 95


state 174

   89 logical_operator_multiple: logical_operator LOGIC_OPERATOR logical_operator_multiple .

    $default  reduce using rule 89 (logical_operator_multiple)


state 175

   69 func_call: IDENTIFIER LEFT_PT term COMMA . term RIGHT_PT

    IDENTIFIER  shift, and go to state 55
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    NEG         shift, and go to state 8

    number  go to state 23
    term    go to state 215


state 176

   21 array: IDENTIFIER LEFT_AR multiple_float RIGHT_AR .

    $default  reduce using rule 21 (array)


state 177

   20 array: IDENTIFIER LEFT_AR multiple_int RIGHT_AR .

    $default  reduce using rule 20 (array)


state 178

   22 array: IDENTIFIER LEFT_AR string RIGHT_AR .

    $default  reduce using rule 22 (array)


state 179

   20 array: IDENTIFIER . LEFT_AR multiple_int RIGHT_AR
   21      | IDENTIFIER . LEFT_AR multiple_float RIGHT_AR
   22      | IDENTIFIER . LEFT_AR string RIGHT_AR

    LEFT_AR  shift, and go to state 54


state 180

   45 print_func: PRINT LEFT_PT IDENTIFIER RIGHT_PT .

    $default  reduce using rule 45 (print_func)


state 181

   46 print_func: PRINT LEFT_PT IDENTIFIER array . RIGHT_PT

    RIGHT_PT  shift, and go to state 216


state 182

   43 print_func: PRINT LEFT_PT STRING COMMA . IDENTIFIER RIGHT_PT
   44           | PRINT LEFT_PT STRING COMMA . expr_no_semi RIGHT_PT

    IDENTIFIER  shift, and go to state 217
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    MINUS       shift, and go to state 7
    NEG         shift, and go to state 8
    PRINT       shift, and go to state 10
    LEFT_PT     shift, and go to state 11
    TYPE        shift, and go to state 12
    SCAN        shift, and go to state 13
    LEN         shift, and go to state 14
    CMP         shift, and go to state 15
    IF          shift, and go to state 17
    RETURN      shift, and go to state 123
    LOG_NOT     shift, and go to state 21

    number                     go to state 23
    term                       go to state 24
    ret                        go to state 29
    print_func                 go to state 126
    declaration                go to state 31
    scan_func                  go to state 32
    len_func                   go to state 33
    cmp_func                   go to state 34
    cmp_operator               go to state 37
    cmp_operator_multiple      go to state 38
    arith_operation            go to state 128
    logical_operator           go to state 40
    logical_operator_multiple  go to state 41
    if_func                    go to state 42
    expr_no_semi               go to state 218


state 183

   39 ret: RETURN IDENTIFIER .

    $default  reduce using rule 39 (ret)


state 184

   38 ret: RETURN INTEGER .

    $default  reduce using rule 38 (ret)


state 185

   41 print_func: PRINT LEFT_PT variable_list RIGHT_PT .

    $default  reduce using rule 41 (print_func)


state 186

   40 print_func: PRINT LEFT_PT string RIGHT_PT .

    $default  reduce using rule 40 (print_func)


state 187

   42 print_func: PRINT LEFT_PT multiple_expressions_no_semi RIGHT_PT .

    $default  reduce using rule 42 (print_func)


state 188

   58 multiple_expressions_no_semi: multiple_expressions_no_semi COMMA . expr_no_semi

    IDENTIFIER  shift, and go to state 142
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    MINUS       shift, and go to state 7
    NEG         shift, and go to state 8
    PRINT       shift, and go to state 10
    LEFT_PT     shift, and go to state 11
    TYPE        shift, and go to state 12
    SCAN        shift, and go to state 13
    LEN         shift, and go to state 14
    CMP         shift, and go to state 15
    IF          shift, and go to state 17
    RETURN      shift, and go to state 123
    LOG_NOT     shift, and go to state 21

    number                     go to state 23
    term                       go to state 24
    ret                        go to state 29
    print_func                 go to state 126
    declaration                go to state 31
    scan_func                  go to state 32
    len_func                   go to state 33
    cmp_func                   go to state 34
    cmp_operator               go to state 37
    cmp_operator_multiple      go to state 38
    arith_operation            go to state 128
    logical_operator           go to state 40
    logical_operator_multiple  go to state 41
    if_func                    go to state 42
    expr_no_semi               go to state 219


state 189

   18 array: LEFT_AR multiple_float RIGHT_AR .

    $default  reduce using rule 18 (array)


state 190

   17 array: LEFT_AR multiple_int RIGHT_AR .

    $default  reduce using rule 17 (array)


state 191

   19 array: LEFT_AR string RIGHT_AR .

    $default  reduce using rule 19 (array)


state 192

   59 scan_func: SCAN LEFT_PT IDENTIFIER RIGHT_PT .

    $default  reduce using rule 59 (scan_func)


state 193

   62 len_func: LEN LEFT_PT IDENTIFIER RIGHT_PT .

    $default  reduce using rule 62 (len_func)


state 194

   60 len_func: LEN LEFT_PT STRING RIGHT_PT .

    $default  reduce using rule 60 (len_func)


state 195

   61 len_func: LEN LEFT_PT array RIGHT_PT .

    $default  reduce using rule 61 (len_func)


state 196

   64 cmp_func: CMP LEFT_PT IDENTIFIER COMMA . IDENTIFIER RIGHT_PT
   66         | CMP LEFT_PT IDENTIFIER COMMA . STRING RIGHT_PT

    IDENTIFIER  shift, and go to state 220
    STRING      shift, and go to state 221


state 197

   63 cmp_func: CMP LEFT_PT STRING COMMA . STRING RIGHT_PT
   65         | CMP LEFT_PT STRING COMMA . IDENTIFIER RIGHT_PT

    IDENTIFIER  shift, and go to state 222
    STRING      shift, and go to state 223


state 198

   67 cmp_func: CMP LEFT_PT number COMMA . number RIGHT_PT

    INTEGER  shift, and go to state 5
    FLOAT    shift, and go to state 6
    NEG      shift, and go to state 8

    number  go to state 224


state 199

   68 func_def: FUNC IDENTIFIER LEFT_PT TYPE . IDENTIFIER COMMA TYPE IDENTIFIER RIGHT_PT multiple_expressions_functions RIGHT_BR

    IDENTIFIER  shift, and go to state 225


state 200

   90 if_func: IF LEFT_PT cmp_operator_multiple RIGHT_PT . expr_no_semi
   91        | IF LEFT_PT cmp_operator_multiple RIGHT_PT . LEFT_BR multiple_expressions RIGHT_BR

    IDENTIFIER  shift, and go to state 142
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    MINUS       shift, and go to state 7
    NEG         shift, and go to state 8
    PRINT       shift, and go to state 10
    LEFT_PT     shift, and go to state 11
    TYPE        shift, and go to state 12
    SCAN        shift, and go to state 13
    LEN         shift, and go to state 14
    CMP         shift, and go to state 15
    LEFT_BR     shift, and go to state 226
    IF          shift, and go to state 17
    RETURN      shift, and go to state 123
    LOG_NOT     shift, and go to state 21

    number                     go to state 23
    term                       go to state 24
    ret                        go to state 29
    print_func                 go to state 126
    declaration                go to state 31
    scan_func                  go to state 32
    len_func                   go to state 33
    cmp_func                   go to state 34
    cmp_operator               go to state 37
    cmp_operator_multiple      go to state 38
    arith_operation            go to state 128
    logical_operator           go to state 40
    logical_operator_multiple  go to state 41
    if_func                    go to state 42
    expr_no_semi               go to state 227


state 201

   92 if_func: IF LEFT_PT logical_operator_multiple RIGHT_PT . expr_no_semi
   93        | IF LEFT_PT logical_operator_multiple RIGHT_PT . LEFT_BR multiple_expressions RIGHT_BR

    IDENTIFIER  shift, and go to state 142
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    MINUS       shift, and go to state 7
    NEG         shift, and go to state 8
    PRINT       shift, and go to state 10
    LEFT_PT     shift, and go to state 11
    TYPE        shift, and go to state 12
    SCAN        shift, and go to state 13
    LEN         shift, and go to state 14
    CMP         shift, and go to state 15
    LEFT_BR     shift, and go to state 228
    IF          shift, and go to state 17
    RETURN      shift, and go to state 123
    LOG_NOT     shift, and go to state 21

    number                     go to state 23
    term                       go to state 24
    ret                        go to state 29
    print_func                 go to state 126
    declaration                go to state 31
    scan_func                  go to state 32
    len_func                   go to state 33
    cmp_func                   go to state 34
    cmp_operator               go to state 37
    cmp_operator_multiple      go to state 38
    arith_operation            go to state 128
    logical_operator           go to state 40
    logical_operator_multiple  go to state 41
    if_func                    go to state 42
    expr_no_semi               go to state 229


state 202

   94 while_func: WHILE LEFT_PT cmp_operator_multiple RIGHT_PT . multiple_expressions_functions RIGHT_BR

    NEWLINE  shift, and go to state 230
    LEFT_BR  shift, and go to state 231

    multiple_expressions_functions  go to state 232


state 203

   95 while_func: WHILE LEFT_PT logical_operator_multiple RIGHT_PT . multiple_expressions_functions RIGHT_BR

    NEWLINE  shift, and go to state 230
    LEFT_BR  shift, and go to state 231

    multiple_expressions_functions  go to state 233


state 204

   96 for_func: FOR LEFT_PT assignment SEMICOLON . cmp_operator_multiple SEMICOLON plus_minus RIGHT_PT multiple_expressions_functions RIGHT_BR
   97         | FOR LEFT_PT assignment SEMICOLON . logical_operator_multiple SEMICOLON plus_minus RIGHT_PT multiple_expressions_functions RIGHT_BR

    IDENTIFIER  shift, and go to state 142
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    NEG         shift, and go to state 8
    LOG_NOT     shift, and go to state 21

    number                     go to state 23
    term                       go to state 143
    cmp_operator               go to state 37
    cmp_operator_multiple      go to state 234
    logical_operator           go to state 40
    logical_operator_multiple  go to state 235


state 205

   85 logical_operator: LOG_NOT RIGHT_PT . cmp_operator LEFT_PT

    IDENTIFIER  shift, and go to state 55
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    NEG         shift, and go to state 8

    number        go to state 23
    term          go to state 143
    cmp_operator  go to state 236


state 206

   85 logical_operator: LOG_NOT RIGHT_PT cmp_operator LEFT_PT .

    $default  reduce using rule 85 (logical_operator)


state 207

   88 logical_operator_multiple: LOG_NOT RIGHT_PT logical_operator LEFT_PT .

    $default  reduce using rule 88 (logical_operator_multiple)


state 208

   14 multiple_int: INTEGER COMMA multiple_int .

    $default  reduce using rule 14 (multiple_int)


state 209

   12 multiple_float: FLOAT COMMA multiple_float .

    $default  reduce using rule 12 (multiple_float)


state 210

   24 array_plus: LEFT_AR multiple_float RIGHT_AR PLUS . LEFT_AR multiple_float RIGHT_AR

    LEFT_AR  shift, and go to state 237


state 211

   23 array_plus: LEFT_AR multiple_int RIGHT_AR PLUS . LEFT_AR multiple_int RIGHT_AR

    LEFT_AR  shift, and go to state 238


state 212

   37 string: string COMMA STRING .

    $default  reduce using rule 37 (string)


state 213

   25 array_plus: LEFT_AR string RIGHT_AR PLUS . LEFT_AR string RIGHT_AR

    LEFT_AR  shift, and go to state 239


state 214

   30 multiple_values: values COMMA . multiple_values

    IDENTIFIER  shift, and go to state 240
    STRING      shift, and go to state 74
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    NEG         shift, and go to state 8
    LEFT_AR     shift, and go to state 62

    number           go to state 23
    term             go to state 76
    array            go to state 77
    values           go to state 160
    multiple_values  go to state 241


state 215

   69 func_call: IDENTIFIER LEFT_PT term COMMA term . RIGHT_PT

    RIGHT_PT  shift, and go to state 242


state 216

   46 print_func: PRINT LEFT_PT IDENTIFIER array RIGHT_PT .

    $default  reduce using rule 46 (print_func)


state 217

    9 term: IDENTIFIER .
   43 print_func: PRINT LEFT_PT STRING COMMA IDENTIFIER . RIGHT_PT
   82 logical_operator: IDENTIFIER . LOGIC_OPERATOR IDENTIFIER

    RIGHT_PT        shift, and go to state 243
    LOGIC_OPERATOR  shift, and go to state 53

    RIGHT_PT  [reduce using rule 9 (term)]
    $default  reduce using rule 9 (term)


state 218

   44 print_func: PRINT LEFT_PT STRING COMMA expr_no_semi . RIGHT_PT

    RIGHT_PT  shift, and go to state 244


state 219

   58 multiple_expressions_no_semi: multiple_expressions_no_semi COMMA expr_no_semi .

    $default  reduce using rule 58 (multiple_expressions_no_semi)


state 220

   64 cmp_func: CMP LEFT_PT IDENTIFIER COMMA IDENTIFIER . RIGHT_PT

    RIGHT_PT  shift, and go to state 245


state 221

   66 cmp_func: CMP LEFT_PT IDENTIFIER COMMA STRING . RIGHT_PT

    RIGHT_PT  shift, and go to state 246


state 222

   65 cmp_func: CMP LEFT_PT STRING COMMA IDENTIFIER . RIGHT_PT

    RIGHT_PT  shift, and go to state 247


state 223

   63 cmp_func: CMP LEFT_PT STRING COMMA STRING . RIGHT_PT

    RIGHT_PT  shift, and go to state 248


state 224

   67 cmp_func: CMP LEFT_PT number COMMA number . RIGHT_PT

    RIGHT_PT  shift, and go to state 249


state 225

   68 func_def: FUNC IDENTIFIER LEFT_PT TYPE IDENTIFIER . COMMA TYPE IDENTIFIER RIGHT_PT multiple_expressions_functions RIGHT_BR

    COMMA  shift, and go to state 250


state 226

   91 if_func: IF LEFT_PT cmp_operator_multiple RIGHT_PT LEFT_BR . multiple_expressions RIGHT_BR

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    MINUS       shift, and go to state 7
    NEG         shift, and go to state 8
    PRINT       shift, and go to state 10
    LEFT_PT     shift, and go to state 11
    TYPE        shift, and go to state 12
    SCAN        shift, and go to state 13
    LEN         shift, and go to state 14
    CMP         shift, and go to state 15
    FUNC        shift, and go to state 16
    IF          shift, and go to state 17
    WHILE       shift, and go to state 18
    FOR         shift, and go to state 19
    RETURN      shift, and go to state 20
    LOG_NOT     shift, and go to state 21
    LEFT_AR     shift, and go to state 22

    $default  reduce using rule 33 (assignment)

    number                     go to state 23
    term                       go to state 24
    array                      go to state 25
    array_plus                 go to state 26
    variable_list              go to state 27
    assignment                 go to state 28
    ret                        go to state 29
    print_func                 go to state 30
    declaration                go to state 31
    multiple_expressions       go to state 251
    scan_func                  go to state 32
    len_func                   go to state 33
    cmp_func                   go to state 34
    func_def                   go to state 35
    func_call                  go to state 36
    cmp_operator               go to state 37
    cmp_operator_multiple      go to state 38
    arith_operation            go to state 39
    logical_operator           go to state 40
    logical_operator_multiple  go to state 41
    if_func                    go to state 42
    while_func                 go to state 43
    for_func                   go to state 44
    expr_assignment            go to state 45
    return                     go to state 46
    expr_no_semi               go to state 47
    expr                       go to state 252


state 227

   90 if_func: IF LEFT_PT cmp_operator_multiple RIGHT_PT expr_no_semi .

    $default  reduce using rule 90 (if_func)


state 228

   93 if_func: IF LEFT_PT logical_operator_multiple RIGHT_PT LEFT_BR . multiple_expressions RIGHT_BR

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    MINUS       shift, and go to state 7
    NEG         shift, and go to state 8
    PRINT       shift, and go to state 10
    LEFT_PT     shift, and go to state 11
    TYPE        shift, and go to state 12
    SCAN        shift, and go to state 13
    LEN         shift, and go to state 14
    CMP         shift, and go to state 15
    FUNC        shift, and go to state 16
    IF          shift, and go to state 17
    WHILE       shift, and go to state 18
    FOR         shift, and go to state 19
    RETURN      shift, and go to state 20
    LOG_NOT     shift, and go to state 21
    LEFT_AR     shift, and go to state 22

    $default  reduce using rule 33 (assignment)

    number                     go to state 23
    term                       go to state 24
    array                      go to state 25
    array_plus                 go to state 26
    variable_list              go to state 27
    assignment                 go to state 28
    ret                        go to state 29
    print_func                 go to state 30
    declaration                go to state 31
    multiple_expressions       go to state 253
    scan_func                  go to state 32
    len_func                   go to state 33
    cmp_func                   go to state 34
    func_def                   go to state 35
    func_call                  go to state 36
    cmp_operator               go to state 37
    cmp_operator_multiple      go to state 38
    arith_operation            go to state 39
    logical_operator           go to state 40
    logical_operator_multiple  go to state 41
    if_func                    go to state 42
    while_func                 go to state 43
    for_func                   go to state 44
    expr_assignment            go to state 45
    return                     go to state 46
    expr_no_semi               go to state 47
    expr                       go to state 252


state 229

   92 if_func: IF LEFT_PT logical_operator_multiple RIGHT_PT expr_no_semi .

    $default  reduce using rule 92 (if_func)


state 230

   51 multiple_expressions_functions: NEWLINE . LEFT_BR expr NEWLINE
   52                               | NEWLINE . LEFT_BR NEWLINE multiple_expressions NEWLINE
   53                               | NEWLINE . LEFT_BR NEWLINE multiple_expressions

    LEFT_BR  shift, and go to state 254


state 231

   50 multiple_expressions_functions: LEFT_BR . expr

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    MINUS       shift, and go to state 7
    NEG         shift, and go to state 8
    PRINT       shift, and go to state 10
    LEFT_PT     shift, and go to state 11
    TYPE        shift, and go to state 12
    SCAN        shift, and go to state 13
    LEN         shift, and go to state 14
    CMP         shift, and go to state 15
    FUNC        shift, and go to state 16
    IF          shift, and go to state 17
    WHILE       shift, and go to state 18
    FOR         shift, and go to state 19
    RETURN      shift, and go to state 20
    LOG_NOT     shift, and go to state 21
    LEFT_AR     shift, and go to state 22

    $default  reduce using rule 33 (assignment)

    number                     go to state 23
    term                       go to state 24
    array                      go to state 25
    array_plus                 go to state 26
    variable_list              go to state 27
    assignment                 go to state 28
    ret                        go to state 29
    print_func                 go to state 30
    declaration                go to state 31
    scan_func                  go to state 32
    len_func                   go to state 33
    cmp_func                   go to state 34
    func_def                   go to state 35
    func_call                  go to state 36
    cmp_operator               go to state 37
    cmp_operator_multiple      go to state 38
    arith_operation            go to state 39
    logical_operator           go to state 40
    logical_operator_multiple  go to state 41
    if_func                    go to state 42
    while_func                 go to state 43
    for_func                   go to state 44
    expr_assignment            go to state 45
    return                     go to state 46
    expr_no_semi               go to state 47
    expr                       go to state 255


state 232

   94 while_func: WHILE LEFT_PT cmp_operator_multiple RIGHT_PT multiple_expressions_functions . RIGHT_BR

    RIGHT_BR  shift, and go to state 256


state 233

   95 while_func: WHILE LEFT_PT logical_operator_multiple RIGHT_PT multiple_expressions_functions . RIGHT_BR

    RIGHT_BR  shift, and go to state 257


state 234

   96 for_func: FOR LEFT_PT assignment SEMICOLON cmp_operator_multiple . SEMICOLON plus_minus RIGHT_PT multiple_expressions_functions RIGHT_BR

    SEMICOLON  shift, and go to state 258


state 235

   97 for_func: FOR LEFT_PT assignment SEMICOLON logical_operator_multiple . SEMICOLON plus_minus RIGHT_PT multiple_expressions_functions RIGHT_BR

    SEMICOLON  shift, and go to state 259


state 236

   85 logical_operator: LOG_NOT RIGHT_PT cmp_operator . LEFT_PT

    LEFT_PT  shift, and go to state 206


state 237

   24 array_plus: LEFT_AR multiple_float RIGHT_AR PLUS LEFT_AR . multiple_float RIGHT_AR

    FLOAT  shift, and go to state 83

    multiple_float  go to state 260


state 238

   23 array_plus: LEFT_AR multiple_int RIGHT_AR PLUS LEFT_AR . multiple_int RIGHT_AR

    INTEGER  shift, and go to state 82

    multiple_int  go to state 261


state 239

   25 array_plus: LEFT_AR string RIGHT_AR PLUS LEFT_AR . string RIGHT_AR

    STRING  shift, and go to state 81

    string  go to state 262


state 240

    9 term: IDENTIFIER .
   20 array: IDENTIFIER . LEFT_AR multiple_int RIGHT_AR
   21      | IDENTIFIER . LEFT_AR multiple_float RIGHT_AR
   22      | IDENTIFIER . LEFT_AR string RIGHT_AR

    LEFT_AR  shift, and go to state 54

    $default  reduce using rule 9 (term)


state 241

   30 multiple_values: values COMMA multiple_values .

    $default  reduce using rule 30 (multiple_values)


state 242

   69 func_call: IDENTIFIER LEFT_PT term COMMA term RIGHT_PT .

    $default  reduce using rule 69 (func_call)


state 243

   43 print_func: PRINT LEFT_PT STRING COMMA IDENTIFIER RIGHT_PT .

    $default  reduce using rule 43 (print_func)


state 244

   44 print_func: PRINT LEFT_PT STRING COMMA expr_no_semi RIGHT_PT .

    $default  reduce using rule 44 (print_func)


state 245

   64 cmp_func: CMP LEFT_PT IDENTIFIER COMMA IDENTIFIER RIGHT_PT .

    $default  reduce using rule 64 (cmp_func)


state 246

   66 cmp_func: CMP LEFT_PT IDENTIFIER COMMA STRING RIGHT_PT .

    $default  reduce using rule 66 (cmp_func)


state 247

   65 cmp_func: CMP LEFT_PT STRING COMMA IDENTIFIER RIGHT_PT .

    $default  reduce using rule 65 (cmp_func)


state 248

   63 cmp_func: CMP LEFT_PT STRING COMMA STRING RIGHT_PT .

    $default  reduce using rule 63 (cmp_func)


state 249

   67 cmp_func: CMP LEFT_PT number COMMA number RIGHT_PT .

    $default  reduce using rule 67 (cmp_func)


state 250

   68 func_def: FUNC IDENTIFIER LEFT_PT TYPE IDENTIFIER COMMA . TYPE IDENTIFIER RIGHT_PT multiple_expressions_functions RIGHT_BR

    TYPE  shift, and go to state 263


state 251

   55 multiple_expressions: multiple_expressions . expr
   56                     | multiple_expressions . multiple_newline expr
   91 if_func: IF LEFT_PT cmp_operator_multiple RIGHT_PT LEFT_BR multiple_expressions . RIGHT_BR

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    MINUS       shift, and go to state 7
    NEG         shift, and go to state 8
    NEWLINE     shift, and go to state 264
    PRINT       shift, and go to state 10
    LEFT_PT     shift, and go to state 11
    TYPE        shift, and go to state 12
    SCAN        shift, and go to state 13
    LEN         shift, and go to state 14
    CMP         shift, and go to state 15
    FUNC        shift, and go to state 16
    RIGHT_BR    shift, and go to state 265
    IF          shift, and go to state 17
    WHILE       shift, and go to state 18
    FOR         shift, and go to state 19
    RETURN      shift, and go to state 20
    LOG_NOT     shift, and go to state 21
    LEFT_AR     shift, and go to state 22

    $default  reduce using rule 33 (assignment)

    number                     go to state 23
    term                       go to state 24
    multiple_newline           go to state 266
    array                      go to state 25
    array_plus                 go to state 26
    variable_list              go to state 27
    assignment                 go to state 28
    ret                        go to state 29
    print_func                 go to state 30
    declaration                go to state 31
    scan_func                  go to state 32
    len_func                   go to state 33
    cmp_func                   go to state 34
    func_def                   go to state 35
    func_call                  go to state 36
    cmp_operator               go to state 37
    cmp_operator_multiple      go to state 38
    arith_operation            go to state 39
    logical_operator           go to state 40
    logical_operator_multiple  go to state 41
    if_func                    go to state 42
    while_func                 go to state 43
    for_func                   go to state 44
    expr_assignment            go to state 45
    return                     go to state 46
    expr_no_semi               go to state 47
    expr                       go to state 267


state 252

   54 multiple_expressions: expr .

    $default  reduce using rule 54 (multiple_expressions)


state 253

   55 multiple_expressions: multiple_expressions . expr
   56                     | multiple_expressions . multiple_newline expr
   93 if_func: IF LEFT_PT logical_operator_multiple RIGHT_PT LEFT_BR multiple_expressions . RIGHT_BR

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    MINUS       shift, and go to state 7
    NEG         shift, and go to state 8
    NEWLINE     shift, and go to state 264
    PRINT       shift, and go to state 10
    LEFT_PT     shift, and go to state 11
    TYPE        shift, and go to state 12
    SCAN        shift, and go to state 13
    LEN         shift, and go to state 14
    CMP         shift, and go to state 15
    FUNC        shift, and go to state 16
    RIGHT_BR    shift, and go to state 268
    IF          shift, and go to state 17
    WHILE       shift, and go to state 18
    FOR         shift, and go to state 19
    RETURN      shift, and go to state 20
    LOG_NOT     shift, and go to state 21
    LEFT_AR     shift, and go to state 22

    $default  reduce using rule 33 (assignment)

    number                     go to state 23
    term                       go to state 24
    multiple_newline           go to state 266
    array                      go to state 25
    array_plus                 go to state 26
    variable_list              go to state 27
    assignment                 go to state 28
    ret                        go to state 29
    print_func                 go to state 30
    declaration                go to state 31
    scan_func                  go to state 32
    len_func                   go to state 33
    cmp_func                   go to state 34
    func_def                   go to state 35
    func_call                  go to state 36
    cmp_operator               go to state 37
    cmp_operator_multiple      go to state 38
    arith_operation            go to state 39
    logical_operator           go to state 40
    logical_operator_multiple  go to state 41
    if_func                    go to state 42
    while_func                 go to state 43
    for_func                   go to state 44
    expr_assignment            go to state 45
    return                     go to state 46
    expr_no_semi               go to state 47
    expr                       go to state 267


state 254

   51 multiple_expressions_functions: NEWLINE LEFT_BR . expr NEWLINE
   52                               | NEWLINE LEFT_BR . NEWLINE multiple_expressions NEWLINE
   53                               | NEWLINE LEFT_BR . NEWLINE multiple_expressions

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    MINUS       shift, and go to state 7
    NEG         shift, and go to state 8
    NEWLINE     shift, and go to state 269
    PRINT       shift, and go to state 10
    LEFT_PT     shift, and go to state 11
    TYPE        shift, and go to state 12
    SCAN        shift, and go to state 13
    LEN         shift, and go to state 14
    CMP         shift, and go to state 15
    FUNC        shift, and go to state 16
    IF          shift, and go to state 17
    WHILE       shift, and go to state 18
    FOR         shift, and go to state 19
    RETURN      shift, and go to state 20
    LOG_NOT     shift, and go to state 21
    LEFT_AR     shift, and go to state 22

    $default  reduce using rule 33 (assignment)

    number                     go to state 23
    term                       go to state 24
    array                      go to state 25
    array_plus                 go to state 26
    variable_list              go to state 27
    assignment                 go to state 28
    ret                        go to state 29
    print_func                 go to state 30
    declaration                go to state 31
    scan_func                  go to state 32
    len_func                   go to state 33
    cmp_func                   go to state 34
    func_def                   go to state 35
    func_call                  go to state 36
    cmp_operator               go to state 37
    cmp_operator_multiple      go to state 38
    arith_operation            go to state 39
    logical_operator           go to state 40
    logical_operator_multiple  go to state 41
    if_func                    go to state 42
    while_func                 go to state 43
    for_func                   go to state 44
    expr_assignment            go to state 45
    return                     go to state 46
    expr_no_semi               go to state 47
    expr                       go to state 270


state 255

   50 multiple_expressions_functions: LEFT_BR expr .

    $default  reduce using rule 50 (multiple_expressions_functions)


state 256

   94 while_func: WHILE LEFT_PT cmp_operator_multiple RIGHT_PT multiple_expressions_functions RIGHT_BR .

    $default  reduce using rule 94 (while_func)


state 257

   95 while_func: WHILE LEFT_PT logical_operator_multiple RIGHT_PT multiple_expressions_functions RIGHT_BR .

    $default  reduce using rule 95 (while_func)


state 258

   96 for_func: FOR LEFT_PT assignment SEMICOLON cmp_operator_multiple SEMICOLON . plus_minus RIGHT_PT multiple_expressions_functions RIGHT_BR

    IDENTIFIER    shift, and go to state 55
    INTEGER       shift, and go to state 5
    FLOAT         shift, and go to state 6
    NEG           shift, and go to state 8
    DOUBLE_PLUS   shift, and go to state 271
    DOUBLE_MINUS  shift, and go to state 272

    number      go to state 23
    term        go to state 273
    plus_minus  go to state 274


state 259

   97 for_func: FOR LEFT_PT assignment SEMICOLON logical_operator_multiple SEMICOLON . plus_minus RIGHT_PT multiple_expressions_functions RIGHT_BR

    IDENTIFIER    shift, and go to state 55
    INTEGER       shift, and go to state 5
    FLOAT         shift, and go to state 6
    NEG           shift, and go to state 8
    DOUBLE_PLUS   shift, and go to state 271
    DOUBLE_MINUS  shift, and go to state 272

    number      go to state 23
    term        go to state 273
    plus_minus  go to state 275


state 260

   24 array_plus: LEFT_AR multiple_float RIGHT_AR PLUS LEFT_AR multiple_float . RIGHT_AR

    RIGHT_AR  shift, and go to state 276


state 261

   23 array_plus: LEFT_AR multiple_int RIGHT_AR PLUS LEFT_AR multiple_int . RIGHT_AR

    RIGHT_AR  shift, and go to state 277


state 262

   25 array_plus: LEFT_AR string RIGHT_AR PLUS LEFT_AR string . RIGHT_AR
   37 string: string . COMMA STRING

    COMMA     shift, and go to state 156
    RIGHT_AR  shift, and go to state 278


state 263

   68 func_def: FUNC IDENTIFIER LEFT_PT TYPE IDENTIFIER COMMA TYPE . IDENTIFIER RIGHT_PT multiple_expressions_functions RIGHT_BR

    IDENTIFIER  shift, and go to state 279


state 264

   15 multiple_newline: NEWLINE .
   16                 | NEWLINE . multiple_newline

    NEWLINE  shift, and go to state 264

    $default  reduce using rule 15 (multiple_newline)

    multiple_newline  go to state 280


state 265

   91 if_func: IF LEFT_PT cmp_operator_multiple RIGHT_PT LEFT_BR multiple_expressions RIGHT_BR .

    $default  reduce using rule 91 (if_func)


state 266

   56 multiple_expressions: multiple_expressions multiple_newline . expr

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    MINUS       shift, and go to state 7
    NEG         shift, and go to state 8
    PRINT       shift, and go to state 10
    LEFT_PT     shift, and go to state 11
    TYPE        shift, and go to state 12
    SCAN        shift, and go to state 13
    LEN         shift, and go to state 14
    CMP         shift, and go to state 15
    FUNC        shift, and go to state 16
    IF          shift, and go to state 17
    WHILE       shift, and go to state 18
    FOR         shift, and go to state 19
    RETURN      shift, and go to state 20
    LOG_NOT     shift, and go to state 21
    LEFT_AR     shift, and go to state 22

    $default  reduce using rule 33 (assignment)

    number                     go to state 23
    term                       go to state 24
    array                      go to state 25
    array_plus                 go to state 26
    variable_list              go to state 27
    assignment                 go to state 28
    ret                        go to state 29
    print_func                 go to state 30
    declaration                go to state 31
    scan_func                  go to state 32
    len_func                   go to state 33
    cmp_func                   go to state 34
    func_def                   go to state 35
    func_call                  go to state 36
    cmp_operator               go to state 37
    cmp_operator_multiple      go to state 38
    arith_operation            go to state 39
    logical_operator           go to state 40
    logical_operator_multiple  go to state 41
    if_func                    go to state 42
    while_func                 go to state 43
    for_func                   go to state 44
    expr_assignment            go to state 45
    return                     go to state 46
    expr_no_semi               go to state 47
    expr                       go to state 281


state 267

   55 multiple_expressions: multiple_expressions expr .

    $default  reduce using rule 55 (multiple_expressions)


state 268

   93 if_func: IF LEFT_PT logical_operator_multiple RIGHT_PT LEFT_BR multiple_expressions RIGHT_BR .

    $default  reduce using rule 93 (if_func)


state 269

   52 multiple_expressions_functions: NEWLINE LEFT_BR NEWLINE . multiple_expressions NEWLINE
   53                               | NEWLINE LEFT_BR NEWLINE . multiple_expressions

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    MINUS       shift, and go to state 7
    NEG         shift, and go to state 8
    PRINT       shift, and go to state 10
    LEFT_PT     shift, and go to state 11
    TYPE        shift, and go to state 12
    SCAN        shift, and go to state 13
    LEN         shift, and go to state 14
    CMP         shift, and go to state 15
    FUNC        shift, and go to state 16
    IF          shift, and go to state 17
    WHILE       shift, and go to state 18
    FOR         shift, and go to state 19
    RETURN      shift, and go to state 20
    LOG_NOT     shift, and go to state 21
    LEFT_AR     shift, and go to state 22

    $default  reduce using rule 33 (assignment)

    number                     go to state 23
    term                       go to state 24
    array                      go to state 25
    array_plus                 go to state 26
    variable_list              go to state 27
    assignment                 go to state 28
    ret                        go to state 29
    print_func                 go to state 30
    declaration                go to state 31
    multiple_expressions       go to state 282
    scan_func                  go to state 32
    len_func                   go to state 33
    cmp_func                   go to state 34
    func_def                   go to state 35
    func_call                  go to state 36
    cmp_operator               go to state 37
    cmp_operator_multiple      go to state 38
    arith_operation            go to state 39
    logical_operator           go to state 40
    logical_operator_multiple  go to state 41
    if_func                    go to state 42
    while_func                 go to state 43
    for_func                   go to state 44
    expr_assignment            go to state 45
    return                     go to state 46
    expr_no_semi               go to state 47
    expr                       go to state 252


state 270

   51 multiple_expressions_functions: NEWLINE LEFT_BR expr . NEWLINE

    NEWLINE  shift, and go to state 283


state 271

   98 plus_minus: DOUBLE_PLUS . term

    IDENTIFIER  shift, and go to state 55
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    NEG         shift, and go to state 8

    number  go to state 23
    term    go to state 284


state 272

   99 plus_minus: DOUBLE_MINUS . term

    IDENTIFIER  shift, and go to state 55
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    NEG         shift, and go to state 8

    number  go to state 23
    term    go to state 285


state 273

  100 plus_minus: term . DOUBLE_PLUS
  101           | term . DOUBLE_MINUS

    DOUBLE_PLUS   shift, and go to state 286
    DOUBLE_MINUS  shift, and go to state 287


state 274

   96 for_func: FOR LEFT_PT assignment SEMICOLON cmp_operator_multiple SEMICOLON plus_minus . RIGHT_PT multiple_expressions_functions RIGHT_BR

    RIGHT_PT  shift, and go to state 288


state 275

   97 for_func: FOR LEFT_PT assignment SEMICOLON logical_operator_multiple SEMICOLON plus_minus . RIGHT_PT multiple_expressions_functions RIGHT_BR

    RIGHT_PT  shift, and go to state 289


state 276

   24 array_plus: LEFT_AR multiple_float RIGHT_AR PLUS LEFT_AR multiple_float RIGHT_AR .

    $default  reduce using rule 24 (array_plus)


state 277

   23 array_plus: LEFT_AR multiple_int RIGHT_AR PLUS LEFT_AR multiple_int RIGHT_AR .

    $default  reduce using rule 23 (array_plus)


state 278

   25 array_plus: LEFT_AR string RIGHT_AR PLUS LEFT_AR string RIGHT_AR .

    $default  reduce using rule 25 (array_plus)


state 279

   68 func_def: FUNC IDENTIFIER LEFT_PT TYPE IDENTIFIER COMMA TYPE IDENTIFIER . RIGHT_PT multiple_expressions_functions RIGHT_BR

    RIGHT_PT  shift, and go to state 290


state 280

   16 multiple_newline: NEWLINE multiple_newline .

    $default  reduce using rule 16 (multiple_newline)


state 281

   56 multiple_expressions: multiple_expressions multiple_newline expr .

    $default  reduce using rule 56 (multiple_expressions)


state 282

   52 multiple_expressions_functions: NEWLINE LEFT_BR NEWLINE multiple_expressions . NEWLINE
   53                               | NEWLINE LEFT_BR NEWLINE multiple_expressions .
   55 multiple_expressions: multiple_expressions . expr
   56                     | multiple_expressions . multiple_newline expr

    IDENTIFIER  shift, and go to state 4
    INTEGER     shift, and go to state 5
    FLOAT       shift, and go to state 6
    MINUS       shift, and go to state 7
    NEG         shift, and go to state 8
    NEWLINE     shift, and go to state 291
    PRINT       shift, and go to state 10
    LEFT_PT     shift, and go to state 11
    TYPE        shift, and go to state 12
    SCAN        shift, and go to state 13
    LEN         shift, and go to state 14
    CMP         shift, and go to state 15
    FUNC        shift, and go to state 16
    IF          shift, and go to state 17
    WHILE       shift, and go to state 18
    FOR         shift, and go to state 19
    RETURN      shift, and go to state 20
    LOG_NOT     shift, and go to state 21
    LEFT_AR     shift, and go to state 22

    RIGHT_BR  reduce using rule 53 (multiple_expressions_functions)
    $default  reduce using rule 33 (assignment)

    number                     go to state 23
    term                       go to state 24
    multiple_newline           go to state 266
    array                      go to state 25
    array_plus                 go to state 26
    variable_list              go to state 27
    assignment                 go to state 28
    ret                        go to state 29
    print_func                 go to state 30
    declaration                go to state 31
    scan_func                  go to state 32
    len_func                   go to state 33
    cmp_func                   go to state 34
    func_def                   go to state 35
    func_call                  go to state 36
    cmp_operator               go to state 37
    cmp_operator_multiple      go to state 38
    arith_operation            go to state 39
    logical_operator           go to state 40
    logical_operator_multiple  go to state 41
    if_func                    go to state 42
    while_func                 go to state 43
    for_func                   go to state 44
    expr_assignment            go to state 45
    return                     go to state 46
    expr_no_semi               go to state 47
    expr                       go to state 267


state 283

   51 multiple_expressions_functions: NEWLINE LEFT_BR expr NEWLINE .

    $default  reduce using rule 51 (multiple_expressions_functions)


state 284

   98 plus_minus: DOUBLE_PLUS term .

    $default  reduce using rule 98 (plus_minus)


state 285

   99 plus_minus: DOUBLE_MINUS term .

    $default  reduce using rule 99 (plus_minus)


state 286

  100 plus_minus: term DOUBLE_PLUS .

    $default  reduce using rule 100 (plus_minus)


state 287

  101 plus_minus: term DOUBLE_MINUS .

    $default  reduce using rule 101 (plus_minus)


state 288

   96 for_func: FOR LEFT_PT assignment SEMICOLON cmp_operator_multiple SEMICOLON plus_minus RIGHT_PT . multiple_expressions_functions RIGHT_BR

    NEWLINE  shift, and go to state 230
    LEFT_BR  shift, and go to state 231

    multiple_expressions_functions  go to state 292


state 289

   97 for_func: FOR LEFT_PT assignment SEMICOLON logical_operator_multiple SEMICOLON plus_minus RIGHT_PT . multiple_expressions_functions RIGHT_BR

    NEWLINE  shift, and go to state 230
    LEFT_BR  shift, and go to state 231

    multiple_expressions_functions  go to state 293


state 290

   68 func_def: FUNC IDENTIFIER LEFT_PT TYPE IDENTIFIER COMMA TYPE IDENTIFIER RIGHT_PT . multiple_expressions_functions RIGHT_BR

    NEWLINE  shift, and go to state 230
    LEFT_BR  shift, and go to state 231

    multiple_expressions_functions  go to state 294


state 291

   15 multiple_newline: NEWLINE .
   16                 | NEWLINE . multiple_newline
   52 multiple_expressions_functions: NEWLINE LEFT_BR NEWLINE multiple_expressions NEWLINE .

    NEWLINE  shift, and go to state 264

    RIGHT_BR  reduce using rule 52 (multiple_expressions_functions)
    $default  reduce using rule 15 (multiple_newline)

    multiple_newline  go to state 280


state 292

   96 for_func: FOR LEFT_PT assignment SEMICOLON cmp_operator_multiple SEMICOLON plus_minus RIGHT_PT multiple_expressions_functions . RIGHT_BR

    RIGHT_BR  shift, and go to state 295


state 293

   97 for_func: FOR LEFT_PT assignment SEMICOLON logical_operator_multiple SEMICOLON plus_minus RIGHT_PT multiple_expressions_functions . RIGHT_BR

    RIGHT_BR  shift, and go to state 296


state 294

   68 func_def: FUNC IDENTIFIER LEFT_PT TYPE IDENTIFIER COMMA TYPE IDENTIFIER RIGHT_PT multiple_expressions_functions . RIGHT_BR

    RIGHT_BR  shift, and go to state 297


state 295

   96 for_func: FOR LEFT_PT assignment SEMICOLON cmp_operator_multiple SEMICOLON plus_minus RIGHT_PT multiple_expressions_functions RIGHT_BR .

    $default  reduce using rule 96 (for_func)


state 296

   97 for_func: FOR LEFT_PT assignment SEMICOLON logical_operator_multiple SEMICOLON plus_minus RIGHT_PT multiple_expressions_functions RIGHT_BR .

    $default  reduce using rule 97 (for_func)


state 297

   68 func_def: FUNC IDENTIFIER LEFT_PT TYPE IDENTIFIER COMMA TYPE IDENTIFIER RIGHT_PT multiple_expressions_functions RIGHT_BR .

    $default  reduce using rule 68 (func_def)
